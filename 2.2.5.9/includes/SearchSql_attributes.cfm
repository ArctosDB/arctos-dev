<!---Autogenerated by /Admin/buildAttributeSearchByNameCode.cfm. Do not manually modify this file.---->

<cfset attrLengthUnits="in,M,METERS,METER,FT,FEET,FOOT,KM,KILOMETER,KILOMETERS,MM,MILLIMETER,MILLIMETERS,CM,CENTIMETER,CENTIMETERS,MI,MILE,MILES,YD,YARD,YARDS,FM,FATHOM,FATHOMS">
<cfset attrWeightUnits="carat,G,GRAMS,GRAM,KG,KILOGRAM,KILOGRAMS,LB,POUND,POUNDS,OZ,OUNCE,OUNCES">
<cfset attrTimeUnits="D,DAY,DAYS,H,HOUR,HOURS,M,MONTH,MONTHS,WEEK,WEEKS,YR,YEAR,YEARS">
<cfset charattrschops="=,!"><cfset numattrschops="=,!,<,>">

<cfif isdefined("abundance") and len(abundance) gt 0>
  <cfset mapurl = "#mapurl#&abundance=#abundance#">
  <cfif compare(abundance,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_abundance ON (#cacheTbleName#.collection_object_id = tbl_abundance.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_abundance.attribute_type = 'abundance'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_abundance.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_abundance ON #cacheTbleName#.collection_object_id = tbl_abundance.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_abundance.attribute_type = 'abundance' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif abundance eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(abundance,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(abundance,len(abundance)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(abundance)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_abundance.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_abundance.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("age") and len(age) gt 0>
  <cfset mapurl = "#mapurl#&age=#age#">
  <cfif compare(age,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_age ON (#cacheTbleName#.collection_object_id = tbl_age.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_age.attribute_type = 'age'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_age.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_age ON #cacheTbleName#.collection_object_id = tbl_age.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_age.attribute_type = 'age' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif age eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(age,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(age,len(age)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(age)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_age.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_age.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("age_class") and len(age_class) gt 0>
  <cfset mapurl = "#mapurl#&age_class=#age_class#">
  <cfif compare(age_class,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_age_class ON (#cacheTbleName#.collection_object_id = tbl_age_class.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_age_class.attribute_type = 'age class'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_age_class.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_age_class ON #cacheTbleName#.collection_object_id = tbl_age_class.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_age_class.attribute_type = 'age class' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif age_class eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(age_class,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(age_class,len(age_class)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(age_class)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_age_class.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_age_class.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("air_temperature") and len(air_temperature) gt 0>
  <cfset mapurl = "#mapurl#&air_temperature=#air_temperature#">
  <cfif compare(air_temperature,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_air_temperature ON (#cacheTbleName#.collection_object_id = tbl_air_temperature.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_air_temperature.attribute_type = 'air temperature'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_air_temperature.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_air_temperature ON #cacheTbleName#.collection_object_id = tbl_air_temperature.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_air_temperature.attribute_type = 'air temperature' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif air_temperature eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(air_temperature,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(air_temperature,len(air_temperature)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(air_temperature)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase('XXXX',temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    <cfif len(schunits) gt 0>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_air_temperature.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_air_temperature.attribute_units">
      <cfset thisrow.o="="> 
      <cfset thisrow.v="#schunits#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_air_temperature.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("archaeological_feature") and len(archaeological_feature) gt 0>
  <cfset mapurl = "#mapurl#&archaeological_feature=#archaeological_feature#">
  <cfif compare(archaeological_feature,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_archaeological_feature ON (#cacheTbleName#.collection_object_id = tbl_archaeological_feature.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_archaeological_feature.attribute_type = 'archaeological feature'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_archaeological_feature.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_archaeological_feature ON #cacheTbleName#.collection_object_id = tbl_archaeological_feature.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_archaeological_feature.attribute_type = 'archaeological feature' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif archaeological_feature eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(archaeological_feature,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(archaeological_feature,len(archaeological_feature)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(archaeological_feature)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_archaeological_feature.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_archaeological_feature.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("axillary_girth") and len(axillary_girth) gt 0>
  <cfset mapurl = "#mapurl#&axillary_girth=#axillary_girth#">
  <cfif compare(axillary_girth,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_axillary_girth ON (#cacheTbleName#.collection_object_id = tbl_axillary_girth.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_axillary_girth.attribute_type = 'axillary girth'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_axillary_girth.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_axillary_girth ON #cacheTbleName#.collection_object_id = tbl_axillary_girth.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_axillary_girth.attribute_type = 'axillary girth' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif axillary_girth eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(axillary_girth,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(axillary_girth,len(axillary_girth)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(axillary_girth)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_axillary_girth.attribute_value,tbl_axillary_girth.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_axillary_girth.attribute_value::numeric,tbl_axillary_girth.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_axillary_girth.attribute_value::numeric,tbl_axillary_girth.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_axillary_girth.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("behavior") and len(behavior) gt 0>
  <cfset mapurl = "#mapurl#&behavior=#behavior#">
  <cfif compare(behavior,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_behavior ON (#cacheTbleName#.collection_object_id = tbl_behavior.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_behavior.attribute_type = 'behavior'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_behavior.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_behavior ON #cacheTbleName#.collection_object_id = tbl_behavior.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_behavior.attribute_type = 'behavior' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif behavior eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(behavior,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(behavior,len(behavior)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(behavior)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_behavior.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_behavior.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("bill_depth") and len(bill_depth) gt 0>
  <cfset mapurl = "#mapurl#&bill_depth=#bill_depth#">
  <cfif compare(bill_depth,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_bill_depth ON (#cacheTbleName#.collection_object_id = tbl_bill_depth.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_bill_depth.attribute_type = 'bill depth'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_bill_depth.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_bill_depth ON #cacheTbleName#.collection_object_id = tbl_bill_depth.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_bill_depth.attribute_type = 'bill depth' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif bill_depth eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(bill_depth,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(bill_depth,len(bill_depth)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(bill_depth)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_bill_depth.attribute_value,tbl_bill_depth.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_bill_depth.attribute_value::numeric,tbl_bill_depth.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_bill_depth.attribute_value::numeric,tbl_bill_depth.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_bill_depth.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("bill_length") and len(bill_length) gt 0>
  <cfset mapurl = "#mapurl#&bill_length=#bill_length#">
  <cfif compare(bill_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_bill_length ON (#cacheTbleName#.collection_object_id = tbl_bill_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_bill_length.attribute_type = 'bill length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_bill_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_bill_length ON #cacheTbleName#.collection_object_id = tbl_bill_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_bill_length.attribute_type = 'bill length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif bill_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(bill_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(bill_length,len(bill_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(bill_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_bill_length.attribute_value,tbl_bill_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_bill_length.attribute_value::numeric,tbl_bill_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_bill_length.attribute_value::numeric,tbl_bill_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_bill_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("bill_width") and len(bill_width) gt 0>
  <cfset mapurl = "#mapurl#&bill_width=#bill_width#">
  <cfif compare(bill_width,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_bill_width ON (#cacheTbleName#.collection_object_id = tbl_bill_width.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_bill_width.attribute_type = 'bill width'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_bill_width.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_bill_width ON #cacheTbleName#.collection_object_id = tbl_bill_width.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_bill_width.attribute_type = 'bill width' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif bill_width eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(bill_width,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(bill_width,len(bill_width)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(bill_width)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_bill_width.attribute_value,tbl_bill_width.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_bill_width.attribute_value::numeric,tbl_bill_width.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_bill_width.attribute_value::numeric,tbl_bill_width.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_bill_width.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("body_condition") and len(body_condition) gt 0>
  <cfset mapurl = "#mapurl#&body_condition=#body_condition#">
  <cfif compare(body_condition,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_body_condition ON (#cacheTbleName#.collection_object_id = tbl_body_condition.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_body_condition.attribute_type = 'body condition'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_body_condition.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_body_condition ON #cacheTbleName#.collection_object_id = tbl_body_condition.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_body_condition.attribute_type = 'body condition' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif body_condition eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(body_condition,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(body_condition,len(body_condition)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(body_condition)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_body_condition.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_body_condition.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("body_temperature") and len(body_temperature) gt 0>
  <cfset mapurl = "#mapurl#&body_temperature=#body_temperature#">
  <cfif compare(body_temperature,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_body_temperature ON (#cacheTbleName#.collection_object_id = tbl_body_temperature.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_body_temperature.attribute_type = 'body temperature'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_body_temperature.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_body_temperature ON #cacheTbleName#.collection_object_id = tbl_body_temperature.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_body_temperature.attribute_type = 'body temperature' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif body_temperature eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(body_temperature,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(body_temperature,len(body_temperature)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(body_temperature)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase('XXXX',temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    <cfif len(schunits) gt 0>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_body_temperature.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_body_temperature.attribute_units">
      <cfset thisrow.o="="> 
      <cfset thisrow.v="#schunits#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_body_temperature.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("body_width") and len(body_width) gt 0>
  <cfset mapurl = "#mapurl#&body_width=#body_width#">
  <cfif compare(body_width,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_body_width ON (#cacheTbleName#.collection_object_id = tbl_body_width.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_body_width.attribute_type = 'body width'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_body_width.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_body_width ON #cacheTbleName#.collection_object_id = tbl_body_width.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_body_width.attribute_type = 'body width' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif body_width eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(body_width,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(body_width,len(body_width)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(body_width)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_body_width.attribute_value,tbl_body_width.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_body_width.attribute_value::numeric,tbl_body_width.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_body_width.attribute_value::numeric,tbl_body_width.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_body_width.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("breadth") and len(breadth) gt 0>
  <cfset mapurl = "#mapurl#&breadth=#breadth#">
  <cfif compare(breadth,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_breadth ON (#cacheTbleName#.collection_object_id = tbl_breadth.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_breadth.attribute_type = 'breadth'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_breadth.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_breadth ON #cacheTbleName#.collection_object_id = tbl_breadth.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_breadth.attribute_type = 'breadth' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif breadth eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(breadth,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(breadth,len(breadth)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(breadth)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_breadth.attribute_value,tbl_breadth.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_breadth.attribute_value::numeric,tbl_breadth.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_breadth.attribute_value::numeric,tbl_breadth.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_breadth.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("brood_patch") and len(brood_patch) gt 0>
  <cfset mapurl = "#mapurl#&brood_patch=#brood_patch#">
  <cfif compare(brood_patch,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_brood_patch ON (#cacheTbleName#.collection_object_id = tbl_brood_patch.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_brood_patch.attribute_type = 'brood patch'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_brood_patch.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_brood_patch ON #cacheTbleName#.collection_object_id = tbl_brood_patch.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_brood_patch.attribute_type = 'brood patch' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif brood_patch eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(brood_patch,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(brood_patch,len(brood_patch)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(brood_patch)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_brood_patch.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_brood_patch.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("bursa") and len(bursa) gt 0>
  <cfset mapurl = "#mapurl#&bursa=#bursa#">
  <cfif compare(bursa,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_bursa ON (#cacheTbleName#.collection_object_id = tbl_bursa.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_bursa.attribute_type = 'bursa'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_bursa.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_bursa ON #cacheTbleName#.collection_object_id = tbl_bursa.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_bursa.attribute_type = 'bursa' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif bursa eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(bursa,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(bursa,len(bursa)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(bursa)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_bursa.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_bursa.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("bursa_length") and len(bursa_length) gt 0>
  <cfset mapurl = "#mapurl#&bursa_length=#bursa_length#">
  <cfif compare(bursa_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_bursa_length ON (#cacheTbleName#.collection_object_id = tbl_bursa_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_bursa_length.attribute_type = 'bursa length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_bursa_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_bursa_length ON #cacheTbleName#.collection_object_id = tbl_bursa_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_bursa_length.attribute_type = 'bursa length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif bursa_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(bursa_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(bursa_length,len(bursa_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(bursa_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_bursa_length.attribute_value,tbl_bursa_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_bursa_length.attribute_value::numeric,tbl_bursa_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_bursa_length.attribute_value::numeric,tbl_bursa_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_bursa_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("bursa_width") and len(bursa_width) gt 0>
  <cfset mapurl = "#mapurl#&bursa_width=#bursa_width#">
  <cfif compare(bursa_width,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_bursa_width ON (#cacheTbleName#.collection_object_id = tbl_bursa_width.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_bursa_width.attribute_type = 'bursa width'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_bursa_width.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_bursa_width ON #cacheTbleName#.collection_object_id = tbl_bursa_width.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_bursa_width.attribute_type = 'bursa width' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif bursa_width eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(bursa_width,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(bursa_width,len(bursa_width)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(bursa_width)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_bursa_width.attribute_value,tbl_bursa_width.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_bursa_width.attribute_value::numeric,tbl_bursa_width.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_bursa_width.attribute_value::numeric,tbl_bursa_width.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_bursa_width.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("calcar_length") and len(calcar_length) gt 0>
  <cfset mapurl = "#mapurl#&calcar_length=#calcar_length#">
  <cfif compare(calcar_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_calcar_length ON (#cacheTbleName#.collection_object_id = tbl_calcar_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_calcar_length.attribute_type = 'calcar length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_calcar_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_calcar_length ON #cacheTbleName#.collection_object_id = tbl_calcar_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_calcar_length.attribute_type = 'calcar length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif calcar_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(calcar_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(calcar_length,len(calcar_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(calcar_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_calcar_length.attribute_value,tbl_calcar_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_calcar_length.attribute_value::numeric,tbl_calcar_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_calcar_length.attribute_value::numeric,tbl_calcar_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_calcar_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("carapace_length") and len(carapace_length) gt 0>
  <cfset mapurl = "#mapurl#&carapace_length=#carapace_length#">
  <cfif compare(carapace_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_carapace_length ON (#cacheTbleName#.collection_object_id = tbl_carapace_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_carapace_length.attribute_type = 'carapace length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_carapace_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_carapace_length ON #cacheTbleName#.collection_object_id = tbl_carapace_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_carapace_length.attribute_type = 'carapace length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif carapace_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(carapace_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(carapace_length,len(carapace_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(carapace_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_carapace_length.attribute_value,tbl_carapace_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_carapace_length.attribute_value::numeric,tbl_carapace_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_carapace_length.attribute_value::numeric,tbl_carapace_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_carapace_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("caste") and len(caste) gt 0>
  <cfset mapurl = "#mapurl#&caste=#caste#">
  <cfif compare(caste,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_caste ON (#cacheTbleName#.collection_object_id = tbl_caste.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_caste.attribute_type = 'caste'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_caste.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_caste ON #cacheTbleName#.collection_object_id = tbl_caste.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_caste.attribute_type = 'caste' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif caste eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(caste,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(caste,len(caste)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(caste)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_caste.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_caste.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("chromatography_compound") and len(chromatography_compound) gt 0>
  <cfset mapurl = "#mapurl#&chromatography_compound=#chromatography_compound#">
  <cfif compare(chromatography_compound,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_chromatography_compound ON (#cacheTbleName#.collection_object_id = tbl_chromatography_compound.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_chromatography_compound.attribute_type = 'chromatography compound'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_chromatography_compound.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_chromatography_compound ON #cacheTbleName#.collection_object_id = tbl_chromatography_compound.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_chromatography_compound.attribute_type = 'chromatography compound' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif chromatography_compound eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(chromatography_compound,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(chromatography_compound,len(chromatography_compound)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(chromatography_compound)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_chromatography_compound.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_chromatography_compound.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("clutch_size") and len(clutch_size) gt 0>
  <cfset mapurl = "#mapurl#&clutch_size=#clutch_size#">
  <cfif compare(clutch_size,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_clutch_size ON (#cacheTbleName#.collection_object_id = tbl_clutch_size.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_clutch_size.attribute_type = 'clutch size'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_clutch_size.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_clutch_size ON #cacheTbleName#.collection_object_id = tbl_clutch_size.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_clutch_size.attribute_type = 'clutch size' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif clutch_size eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(clutch_size,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(clutch_size,len(clutch_size)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(clutch_size)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_clutch_size.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_clutch_size.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("clutch_size_of_nest_parasite") and len(clutch_size_of_nest_parasite) gt 0>
  <cfset mapurl = "#mapurl#&clutch_size_of_nest_parasite=#clutch_size_of_nest_parasite#">
  <cfif compare(clutch_size_of_nest_parasite,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_clutch_size_of_nest_parasite ON (#cacheTbleName#.collection_object_id = tbl_clutch_size_of_nest_parasite.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_clutch_size_of_nest_parasite.attribute_type = 'clutch size of nest parasite'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_clutch_size_of_nest_parasite.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_clutch_size_of_nest_parasite ON #cacheTbleName#.collection_object_id = tbl_clutch_size_of_nest_parasite.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_clutch_size_of_nest_parasite.attribute_type = 'clutch size of nest parasite' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif clutch_size_of_nest_parasite eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(clutch_size_of_nest_parasite,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(clutch_size_of_nest_parasite,len(clutch_size_of_nest_parasite)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(clutch_size_of_nest_parasite)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_clutch_size_of_nest_parasite.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_clutch_size_of_nest_parasite.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("colors") and len(colors) gt 0>
  <cfset mapurl = "#mapurl#&colors=#colors#">
  <cfif compare(colors,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_colors ON (#cacheTbleName#.collection_object_id = tbl_colors.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_colors.attribute_type = 'colors'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_colors.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_colors ON #cacheTbleName#.collection_object_id = tbl_colors.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_colors.attribute_type = 'colors' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif colors eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(colors,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(colors,len(colors)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(colors)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_colors.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_colors.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("copyright_status") and len(copyright_status) gt 0>
  <cfset mapurl = "#mapurl#&copyright_status=#copyright_status#">
  <cfif compare(copyright_status,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_copyright_status ON (#cacheTbleName#.collection_object_id = tbl_copyright_status.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_copyright_status.attribute_type = 'copyright status'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_copyright_status.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_copyright_status ON #cacheTbleName#.collection_object_id = tbl_copyright_status.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_copyright_status.attribute_type = 'copyright status' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif copyright_status eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(copyright_status,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(copyright_status,len(copyright_status)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(copyright_status)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_copyright_status.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_copyright_status.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("credit_line") and len(credit_line) gt 0>
  <cfset mapurl = "#mapurl#&credit_line=#credit_line#">
  <cfif compare(credit_line,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_credit_line ON (#cacheTbleName#.collection_object_id = tbl_credit_line.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_credit_line.attribute_type = 'credit line'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_credit_line.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_credit_line ON #cacheTbleName#.collection_object_id = tbl_credit_line.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_credit_line.attribute_type = 'credit line' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif credit_line eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(credit_line,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(credit_line,len(credit_line)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(credit_line)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_credit_line.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_credit_line.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("crop_contents") and len(crop_contents) gt 0>
  <cfset mapurl = "#mapurl#&crop_contents=#crop_contents#">
  <cfif compare(crop_contents,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_crop_contents ON (#cacheTbleName#.collection_object_id = tbl_crop_contents.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_crop_contents.attribute_type = 'crop contents'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_crop_contents.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_crop_contents ON #cacheTbleName#.collection_object_id = tbl_crop_contents.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_crop_contents.attribute_type = 'crop contents' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif crop_contents eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(crop_contents,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(crop_contents,len(crop_contents)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(crop_contents)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_crop_contents.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_crop_contents.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("crown_rump_length") and len(crown_rump_length) gt 0>
  <cfset mapurl = "#mapurl#&crown_rump_length=#crown_rump_length#">
  <cfif compare(crown_rump_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_crown_rump_length ON (#cacheTbleName#.collection_object_id = tbl_crown_rump_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_crown_rump_length.attribute_type = 'crown-rump length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_crown_rump_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_crown_rump_length ON #cacheTbleName#.collection_object_id = tbl_crown_rump_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_crown_rump_length.attribute_type = 'crown-rump length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif crown_rump_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(crown_rump_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(crown_rump_length,len(crown_rump_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(crown_rump_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_crown_rump_length.attribute_value,tbl_crown_rump_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_crown_rump_length.attribute_value::numeric,tbl_crown_rump_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_crown_rump_length.attribute_value::numeric,tbl_crown_rump_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_crown_rump_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("crystal_habit") and len(crystal_habit) gt 0>
  <cfset mapurl = "#mapurl#&crystal_habit=#crystal_habit#">
  <cfif compare(crystal_habit,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_crystal_habit ON (#cacheTbleName#.collection_object_id = tbl_crystal_habit.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_crystal_habit.attribute_type = 'crystal habit'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_crystal_habit.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_crystal_habit ON #cacheTbleName#.collection_object_id = tbl_crystal_habit.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_crystal_habit.attribute_type = 'crystal habit' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif crystal_habit eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(crystal_habit,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(crystal_habit,len(crystal_habit)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(crystal_habit)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_crystal_habit.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_crystal_habit.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("culmen_length") and len(culmen_length) gt 0>
  <cfset mapurl = "#mapurl#&culmen_length=#culmen_length#">
  <cfif compare(culmen_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_culmen_length ON (#cacheTbleName#.collection_object_id = tbl_culmen_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_culmen_length.attribute_type = 'culmen length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_culmen_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_culmen_length ON #cacheTbleName#.collection_object_id = tbl_culmen_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_culmen_length.attribute_type = 'culmen length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif culmen_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(culmen_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(culmen_length,len(culmen_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(culmen_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_culmen_length.attribute_value,tbl_culmen_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_culmen_length.attribute_value::numeric,tbl_culmen_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_culmen_length.attribute_value::numeric,tbl_culmen_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_culmen_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("culture_of_origin") and len(culture_of_origin) gt 0>
  <cfset mapurl = "#mapurl#&culture_of_origin=#culture_of_origin#">
  <cfif compare(culture_of_origin,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_culture_of_origin ON (#cacheTbleName#.collection_object_id = tbl_culture_of_origin.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_culture_of_origin.attribute_type = 'culture of origin'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_culture_of_origin.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_culture_of_origin ON #cacheTbleName#.collection_object_id = tbl_culture_of_origin.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_culture_of_origin.attribute_type = 'culture of origin' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif culture_of_origin eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(culture_of_origin,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(culture_of_origin,len(culture_of_origin)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(culture_of_origin)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_culture_of_origin.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_culture_of_origin.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("culture_of_use") and len(culture_of_use) gt 0>
  <cfset mapurl = "#mapurl#&culture_of_use=#culture_of_use#">
  <cfif compare(culture_of_use,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_culture_of_use ON (#cacheTbleName#.collection_object_id = tbl_culture_of_use.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_culture_of_use.attribute_type = 'culture of use'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_culture_of_use.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_culture_of_use ON #cacheTbleName#.collection_object_id = tbl_culture_of_use.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_culture_of_use.attribute_type = 'culture of use' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif culture_of_use eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(culture_of_use,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(culture_of_use,len(culture_of_use)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(culture_of_use)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_culture_of_use.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_culture_of_use.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("curved_carapace_length") and len(curved_carapace_length) gt 0>
  <cfset mapurl = "#mapurl#&curved_carapace_length=#curved_carapace_length#">
  <cfif compare(curved_carapace_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_curved_carapace_length ON (#cacheTbleName#.collection_object_id = tbl_curved_carapace_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_curved_carapace_length.attribute_type = 'curved carapace length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_curved_carapace_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_curved_carapace_length ON #cacheTbleName#.collection_object_id = tbl_curved_carapace_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_curved_carapace_length.attribute_type = 'curved carapace length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif curved_carapace_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(curved_carapace_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(curved_carapace_length,len(curved_carapace_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(curved_carapace_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_curved_carapace_length.attribute_value,tbl_curved_carapace_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_curved_carapace_length.attribute_value::numeric,tbl_curved_carapace_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_curved_carapace_length.attribute_value::numeric,tbl_curved_carapace_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_curved_carapace_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("curvilinear_length") and len(curvilinear_length) gt 0>
  <cfset mapurl = "#mapurl#&curvilinear_length=#curvilinear_length#">
  <cfif compare(curvilinear_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_curvilinear_length ON (#cacheTbleName#.collection_object_id = tbl_curvilinear_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_curvilinear_length.attribute_type = 'curvilinear length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_curvilinear_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_curvilinear_length ON #cacheTbleName#.collection_object_id = tbl_curvilinear_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_curvilinear_length.attribute_type = 'curvilinear length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif curvilinear_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(curvilinear_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(curvilinear_length,len(curvilinear_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(curvilinear_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_curvilinear_length.attribute_value,tbl_curvilinear_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_curvilinear_length.attribute_value::numeric,tbl_curvilinear_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_curvilinear_length.attribute_value::numeric,tbl_curvilinear_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_curvilinear_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("description") and len(description) gt 0>
  <cfset mapurl = "#mapurl#&description=#description#">
  <cfif compare(description,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_description ON (#cacheTbleName#.collection_object_id = tbl_description.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_description.attribute_type = 'description'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_description.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_description ON #cacheTbleName#.collection_object_id = tbl_description.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_description.attribute_type = 'description' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif description eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(description,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(description,len(description)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(description)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_description.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_description.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("dimensions") and len(dimensions) gt 0>
  <cfset mapurl = "#mapurl#&dimensions=#dimensions#">
  <cfif compare(dimensions,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_dimensions ON (#cacheTbleName#.collection_object_id = tbl_dimensions.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_dimensions.attribute_type = 'dimensions'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_dimensions.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_dimensions ON #cacheTbleName#.collection_object_id = tbl_dimensions.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_dimensions.attribute_type = 'dimensions' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif dimensions eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(dimensions,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(dimensions,len(dimensions)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(dimensions)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_dimensions.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_dimensions.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("diploid_number") and len(diploid_number) gt 0>
  <cfset mapurl = "#mapurl#&diploid_number=#diploid_number#">
  <cfif compare(diploid_number,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_diploid_number ON (#cacheTbleName#.collection_object_id = tbl_diploid_number.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_diploid_number.attribute_type = 'diploid number'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_diploid_number.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_diploid_number ON #cacheTbleName#.collection_object_id = tbl_diploid_number.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_diploid_number.attribute_type = 'diploid number' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif diploid_number eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(diploid_number,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(diploid_number,len(diploid_number)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(diploid_number)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_diploid_number.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_diploid_number.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("ear_from_crown") and len(ear_from_crown) gt 0>
  <cfset mapurl = "#mapurl#&ear_from_crown=#ear_from_crown#">
  <cfif compare(ear_from_crown,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_ear_from_crown ON (#cacheTbleName#.collection_object_id = tbl_ear_from_crown.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_ear_from_crown.attribute_type = 'ear from crown'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_ear_from_crown.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_ear_from_crown ON #cacheTbleName#.collection_object_id = tbl_ear_from_crown.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_ear_from_crown.attribute_type = 'ear from crown' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif ear_from_crown eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(ear_from_crown,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(ear_from_crown,len(ear_from_crown)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(ear_from_crown)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_ear_from_crown.attribute_value,tbl_ear_from_crown.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_ear_from_crown.attribute_value::numeric,tbl_ear_from_crown.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_ear_from_crown.attribute_value::numeric,tbl_ear_from_crown.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_ear_from_crown.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("ear_from_notch") and len(ear_from_notch) gt 0>
  <cfset mapurl = "#mapurl#&ear_from_notch=#ear_from_notch#">
  <cfif compare(ear_from_notch,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_ear_from_notch ON (#cacheTbleName#.collection_object_id = tbl_ear_from_notch.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_ear_from_notch.attribute_type = 'ear from notch'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_ear_from_notch.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_ear_from_notch ON #cacheTbleName#.collection_object_id = tbl_ear_from_notch.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_ear_from_notch.attribute_type = 'ear from notch' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif ear_from_notch eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(ear_from_notch,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(ear_from_notch,len(ear_from_notch)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(ear_from_notch)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_ear_from_notch.attribute_value,tbl_ear_from_notch.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_ear_from_notch.attribute_value::numeric,tbl_ear_from_notch.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_ear_from_notch.attribute_value::numeric,tbl_ear_from_notch.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_ear_from_notch.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("ectoparasite_examination") and len(ectoparasite_examination) gt 0>
  <cfset mapurl = "#mapurl#&ectoparasite_examination=#ectoparasite_examination#">
  <cfif compare(ectoparasite_examination,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_ectoparasite_examination ON (#cacheTbleName#.collection_object_id = tbl_ectoparasite_examination.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_ectoparasite_examination.attribute_type = 'ectoparasite examination'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_ectoparasite_examination.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_ectoparasite_examination ON #cacheTbleName#.collection_object_id = tbl_ectoparasite_examination.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_ectoparasite_examination.attribute_type = 'ectoparasite examination' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif ectoparasite_examination eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(ectoparasite_examination,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(ectoparasite_examination,len(ectoparasite_examination)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(ectoparasite_examination)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_ectoparasite_examination.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_ectoparasite_examination.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("ectoparasites_detected") and len(ectoparasites_detected) gt 0>
  <cfset mapurl = "#mapurl#&ectoparasites_detected=#ectoparasites_detected#">
  <cfif compare(ectoparasites_detected,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_ectoparasites_detected ON (#cacheTbleName#.collection_object_id = tbl_ectoparasites_detected.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_ectoparasites_detected.attribute_type = 'ectoparasites detected'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_ectoparasites_detected.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_ectoparasites_detected ON #cacheTbleName#.collection_object_id = tbl_ectoparasites_detected.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_ectoparasites_detected.attribute_type = 'ectoparasites detected' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif ectoparasites_detected eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(ectoparasites_detected,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(ectoparasites_detected,len(ectoparasites_detected)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(ectoparasites_detected)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_ectoparasites_detected.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_ectoparasites_detected.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("egg_content_weight") and len(egg_content_weight) gt 0>
  <cfset mapurl = "#mapurl#&egg_content_weight=#egg_content_weight#">
  <cfif compare(egg_content_weight,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_egg_content_weight ON (#cacheTbleName#.collection_object_id = tbl_egg_content_weight.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_egg_content_weight.attribute_type = 'egg content weight'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_egg_content_weight.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_egg_content_weight ON #cacheTbleName#.collection_object_id = tbl_egg_content_weight.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_egg_content_weight.attribute_type = 'egg content weight' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif egg_content_weight eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(egg_content_weight,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(egg_content_weight,len(egg_content_weight)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(egg_content_weight)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrWeightUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrWeightUnits=============
    <cfif oper is "between">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="to_grams(tbl_egg_content_weight.attribute_value,tbl_egg_content_weight.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="to_grams('#low#','#schunits#')">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="to_grams(tbl_egg_content_weight.attribute_value,tbl_egg_content_weight.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="to_grams('#high#','#schunits#')">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="to_grams(tbl_egg_content_weight.attribute_value,tbl_egg_content_weight.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="to_grams('#schTerm#','#schunits#')">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_egg_content_weight.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("eggshell_thickness") and len(eggshell_thickness) gt 0>
  <cfset mapurl = "#mapurl#&eggshell_thickness=#eggshell_thickness#">
  <cfif compare(eggshell_thickness,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_eggshell_thickness ON (#cacheTbleName#.collection_object_id = tbl_eggshell_thickness.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_eggshell_thickness.attribute_type = 'eggshell thickness'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_eggshell_thickness.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_eggshell_thickness ON #cacheTbleName#.collection_object_id = tbl_eggshell_thickness.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_eggshell_thickness.attribute_type = 'eggshell thickness' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif eggshell_thickness eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(eggshell_thickness,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(eggshell_thickness,len(eggshell_thickness)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(eggshell_thickness)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_eggshell_thickness.attribute_value,tbl_eggshell_thickness.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_eggshell_thickness.attribute_value::numeric,tbl_eggshell_thickness.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_eggshell_thickness.attribute_value::numeric,tbl_eggshell_thickness.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_eggshell_thickness.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("electrical_conductivity") and len(electrical_conductivity) gt 0>
  <cfset mapurl = "#mapurl#&electrical_conductivity=#electrical_conductivity#">
  <cfif compare(electrical_conductivity,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_electrical_conductivity ON (#cacheTbleName#.collection_object_id = tbl_electrical_conductivity.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_electrical_conductivity.attribute_type = 'electrical conductivity'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_electrical_conductivity.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_electrical_conductivity ON #cacheTbleName#.collection_object_id = tbl_electrical_conductivity.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_electrical_conductivity.attribute_type = 'electrical conductivity' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif electrical_conductivity eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(electrical_conductivity,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(electrical_conductivity,len(electrical_conductivity)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(electrical_conductivity)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase('XXXX',temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    <cfif len(schunits) gt 0>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_electrical_conductivity.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_electrical_conductivity.attribute_units">
      <cfset thisrow.o="="> 
      <cfset thisrow.v="#schunits#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_electrical_conductivity.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("endoparasite_examination") and len(endoparasite_examination) gt 0>
  <cfset mapurl = "#mapurl#&endoparasite_examination=#endoparasite_examination#">
  <cfif compare(endoparasite_examination,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_endoparasite_examination ON (#cacheTbleName#.collection_object_id = tbl_endoparasite_examination.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_endoparasite_examination.attribute_type = 'endoparasite examination'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_endoparasite_examination.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_endoparasite_examination ON #cacheTbleName#.collection_object_id = tbl_endoparasite_examination.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_endoparasite_examination.attribute_type = 'endoparasite examination' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif endoparasite_examination eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(endoparasite_examination,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(endoparasite_examination,len(endoparasite_examination)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(endoparasite_examination)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_endoparasite_examination.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_endoparasite_examination.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("endoparasites_detected") and len(endoparasites_detected) gt 0>
  <cfset mapurl = "#mapurl#&endoparasites_detected=#endoparasites_detected#">
  <cfif compare(endoparasites_detected,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_endoparasites_detected ON (#cacheTbleName#.collection_object_id = tbl_endoparasites_detected.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_endoparasites_detected.attribute_type = 'endoparasites detected'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_endoparasites_detected.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_endoparasites_detected ON #cacheTbleName#.collection_object_id = tbl_endoparasites_detected.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_endoparasites_detected.attribute_type = 'endoparasites detected' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif endoparasites_detected eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(endoparasites_detected,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(endoparasites_detected,len(endoparasites_detected)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(endoparasites_detected)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_endoparasites_detected.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_endoparasites_detected.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("examined_for_parasites") and len(examined_for_parasites) gt 0>
  <cfset mapurl = "#mapurl#&examined_for_parasites=#examined_for_parasites#">
  <cfif compare(examined_for_parasites,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_examined_for_parasites ON (#cacheTbleName#.collection_object_id = tbl_examined_for_parasites.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_examined_for_parasites.attribute_type = 'examined for parasites'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_examined_for_parasites.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_examined_for_parasites ON #cacheTbleName#.collection_object_id = tbl_examined_for_parasites.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_examined_for_parasites.attribute_type = 'examined for parasites' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif examined_for_parasites eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(examined_for_parasites,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(examined_for_parasites,len(examined_for_parasites)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(examined_for_parasites)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_examined_for_parasites.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_examined_for_parasites.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("exhibit_caption") and len(exhibit_caption) gt 0>
  <cfset mapurl = "#mapurl#&exhibit_caption=#exhibit_caption#">
  <cfif compare(exhibit_caption,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_exhibit_caption ON (#cacheTbleName#.collection_object_id = tbl_exhibit_caption.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_exhibit_caption.attribute_type = 'exhibit caption'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_exhibit_caption.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_exhibit_caption ON #cacheTbleName#.collection_object_id = tbl_exhibit_caption.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_exhibit_caption.attribute_type = 'exhibit caption' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif exhibit_caption eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(exhibit_caption,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(exhibit_caption,len(exhibit_caption)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(exhibit_caption)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_exhibit_caption.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_exhibit_caption.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("experimental") and len(experimental) gt 0>
  <cfset mapurl = "#mapurl#&experimental=#experimental#">
  <cfif compare(experimental,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_experimental ON (#cacheTbleName#.collection_object_id = tbl_experimental.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_experimental.attribute_type = 'experimental'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_experimental.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_experimental ON #cacheTbleName#.collection_object_id = tbl_experimental.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_experimental.attribute_type = 'experimental' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif experimental eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(experimental,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(experimental,len(experimental)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(experimental)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_experimental.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_experimental.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("extension") and len(extension) gt 0>
  <cfset mapurl = "#mapurl#&extension=#extension#">
  <cfif compare(extension,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_extension ON (#cacheTbleName#.collection_object_id = tbl_extension.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_extension.attribute_type = 'extension'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_extension.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_extension ON #cacheTbleName#.collection_object_id = tbl_extension.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_extension.attribute_type = 'extension' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif extension eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(extension,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(extension,len(extension)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(extension)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_extension.attribute_value,tbl_extension.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_extension.attribute_value::numeric,tbl_extension.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_extension.attribute_value::numeric,tbl_extension.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_extension.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("fat_deposition") and len(fat_deposition) gt 0>
  <cfset mapurl = "#mapurl#&fat_deposition=#fat_deposition#">
  <cfif compare(fat_deposition,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_fat_deposition ON (#cacheTbleName#.collection_object_id = tbl_fat_deposition.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_fat_deposition.attribute_type = 'fat deposition'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_fat_deposition.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_fat_deposition ON #cacheTbleName#.collection_object_id = tbl_fat_deposition.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_fat_deposition.attribute_type = 'fat deposition' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif fat_deposition eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(fat_deposition,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(fat_deposition,len(fat_deposition)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(fat_deposition)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_fat_deposition.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_fat_deposition.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("forearm_length") and len(forearm_length) gt 0>
  <cfset mapurl = "#mapurl#&forearm_length=#forearm_length#">
  <cfif compare(forearm_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_forearm_length ON (#cacheTbleName#.collection_object_id = tbl_forearm_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_forearm_length.attribute_type = 'forearm length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_forearm_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_forearm_length ON #cacheTbleName#.collection_object_id = tbl_forearm_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_forearm_length.attribute_type = 'forearm length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif forearm_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(forearm_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(forearm_length,len(forearm_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(forearm_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_forearm_length.attribute_value,tbl_forearm_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_forearm_length.attribute_value::numeric,tbl_forearm_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_forearm_length.attribute_value::numeric,tbl_forearm_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_forearm_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("fork_length") and len(fork_length) gt 0>
  <cfset mapurl = "#mapurl#&fork_length=#fork_length#">
  <cfif compare(fork_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_fork_length ON (#cacheTbleName#.collection_object_id = tbl_fork_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_fork_length.attribute_type = 'fork length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_fork_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_fork_length ON #cacheTbleName#.collection_object_id = tbl_fork_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_fork_length.attribute_type = 'fork length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif fork_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(fork_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(fork_length,len(fork_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(fork_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_fork_length.attribute_value,tbl_fork_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_fork_length.attribute_value::numeric,tbl_fork_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_fork_length.attribute_value::numeric,tbl_fork_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_fork_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("framed") and len(framed) gt 0>
  <cfset mapurl = "#mapurl#&framed=#framed#">
  <cfif compare(framed,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_framed ON (#cacheTbleName#.collection_object_id = tbl_framed.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_framed.attribute_type = 'framed'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_framed.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_framed ON #cacheTbleName#.collection_object_id = tbl_framed.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_framed.attribute_type = 'framed' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif framed eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(framed,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(framed,len(framed)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(framed)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_framed.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_framed.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("gape_width") and len(gape_width) gt 0>
  <cfset mapurl = "#mapurl#&gape_width=#gape_width#">
  <cfif compare(gape_width,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_gape_width ON (#cacheTbleName#.collection_object_id = tbl_gape_width.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_gape_width.attribute_type = 'gape width'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_gape_width.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_gape_width ON #cacheTbleName#.collection_object_id = tbl_gape_width.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_gape_width.attribute_type = 'gape width' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif gape_width eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(gape_width,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(gape_width,len(gape_width)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(gape_width)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_gape_width.attribute_value,tbl_gape_width.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_gape_width.attribute_value::numeric,tbl_gape_width.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_gape_width.attribute_value::numeric,tbl_gape_width.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_gape_width.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("gonad") and len(gonad) gt 0>
  <cfset mapurl = "#mapurl#&gonad=#gonad#">
  <cfif compare(gonad,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_gonad ON (#cacheTbleName#.collection_object_id = tbl_gonad.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_gonad.attribute_type = 'gonad'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_gonad.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_gonad ON #cacheTbleName#.collection_object_id = tbl_gonad.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_gonad.attribute_type = 'gonad' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif gonad eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(gonad,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(gonad,len(gonad)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(gonad)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_gonad.attribute_value,tbl_gonad.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_gonad.attribute_value::numeric,tbl_gonad.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_gonad.attribute_value::numeric,tbl_gonad.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_gonad.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("gonad_weight") and len(gonad_weight) gt 0>
  <cfset mapurl = "#mapurl#&gonad_weight=#gonad_weight#">
  <cfif compare(gonad_weight,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_gonad_weight ON (#cacheTbleName#.collection_object_id = tbl_gonad_weight.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_gonad_weight.attribute_type = 'gonad weight'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_gonad_weight.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_gonad_weight ON #cacheTbleName#.collection_object_id = tbl_gonad_weight.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_gonad_weight.attribute_type = 'gonad weight' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif gonad_weight eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(gonad_weight,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(gonad_weight,len(gonad_weight)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(gonad_weight)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrWeightUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrWeightUnits=============
    <cfif oper is "between">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="to_grams(tbl_gonad_weight.attribute_value,tbl_gonad_weight.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="to_grams('#low#','#schunits#')">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="to_grams(tbl_gonad_weight.attribute_value,tbl_gonad_weight.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="to_grams('#high#','#schunits#')">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="to_grams(tbl_gonad_weight.attribute_value,tbl_gonad_weight.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="to_grams('#schTerm#','#schunits#')">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_gonad_weight.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("hallux_length") and len(hallux_length) gt 0>
  <cfset mapurl = "#mapurl#&hallux_length=#hallux_length#">
  <cfif compare(hallux_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_hallux_length ON (#cacheTbleName#.collection_object_id = tbl_hallux_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_hallux_length.attribute_type = 'hallux length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_hallux_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_hallux_length ON #cacheTbleName#.collection_object_id = tbl_hallux_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_hallux_length.attribute_type = 'hallux length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif hallux_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(hallux_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(hallux_length,len(hallux_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(hallux_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_hallux_length.attribute_value,tbl_hallux_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_hallux_length.attribute_value::numeric,tbl_hallux_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_hallux_length.attribute_value::numeric,tbl_hallux_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_hallux_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("head_length") and len(head_length) gt 0>
  <cfset mapurl = "#mapurl#&head_length=#head_length#">
  <cfif compare(head_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_head_length ON (#cacheTbleName#.collection_object_id = tbl_head_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_head_length.attribute_type = 'head length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_head_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_head_length ON #cacheTbleName#.collection_object_id = tbl_head_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_head_length.attribute_type = 'head length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif head_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(head_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(head_length,len(head_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(head_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_head_length.attribute_value,tbl_head_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_head_length.attribute_value::numeric,tbl_head_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_head_length.attribute_value::numeric,tbl_head_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_head_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("head_width") and len(head_width) gt 0>
  <cfset mapurl = "#mapurl#&head_width=#head_width#">
  <cfif compare(head_width,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_head_width ON (#cacheTbleName#.collection_object_id = tbl_head_width.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_head_width.attribute_type = 'head width'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_head_width.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_head_width ON #cacheTbleName#.collection_object_id = tbl_head_width.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_head_width.attribute_type = 'head width' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif head_width eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(head_width,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(head_width,len(head_width)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(head_width)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_head_width.attribute_value,tbl_head_width.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_head_width.attribute_value::numeric,tbl_head_width.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_head_width.attribute_value::numeric,tbl_head_width.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_head_width.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("height") and len(height) gt 0>
  <cfset mapurl = "#mapurl#&height=#height#">
  <cfif compare(height,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_height ON (#cacheTbleName#.collection_object_id = tbl_height.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_height.attribute_type = 'height'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_height.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_height ON #cacheTbleName#.collection_object_id = tbl_height.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_height.attribute_type = 'height' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif height eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(height,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(height,len(height)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(height)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_height.attribute_value,tbl_height.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_height.attribute_value::numeric,tbl_height.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_height.attribute_value::numeric,tbl_height.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_height.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("hind_foot_with_claw") and len(hind_foot_with_claw) gt 0>
  <cfset mapurl = "#mapurl#&hind_foot_with_claw=#hind_foot_with_claw#">
  <cfif compare(hind_foot_with_claw,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_hind_foot_with_claw ON (#cacheTbleName#.collection_object_id = tbl_hind_foot_with_claw.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_hind_foot_with_claw.attribute_type = 'hind foot with claw'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_hind_foot_with_claw.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_hind_foot_with_claw ON #cacheTbleName#.collection_object_id = tbl_hind_foot_with_claw.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_hind_foot_with_claw.attribute_type = 'hind foot with claw' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif hind_foot_with_claw eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(hind_foot_with_claw,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(hind_foot_with_claw,len(hind_foot_with_claw)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(hind_foot_with_claw)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_hind_foot_with_claw.attribute_value,tbl_hind_foot_with_claw.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_hind_foot_with_claw.attribute_value::numeric,tbl_hind_foot_with_claw.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_hind_foot_with_claw.attribute_value::numeric,tbl_hind_foot_with_claw.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_hind_foot_with_claw.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("hind_foot_without_claw") and len(hind_foot_without_claw) gt 0>
  <cfset mapurl = "#mapurl#&hind_foot_without_claw=#hind_foot_without_claw#">
  <cfif compare(hind_foot_without_claw,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_hind_foot_without_claw ON (#cacheTbleName#.collection_object_id = tbl_hind_foot_without_claw.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_hind_foot_without_claw.attribute_type = 'hind foot without claw'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_hind_foot_without_claw.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_hind_foot_without_claw ON #cacheTbleName#.collection_object_id = tbl_hind_foot_without_claw.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_hind_foot_without_claw.attribute_type = 'hind foot without claw' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif hind_foot_without_claw eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(hind_foot_without_claw,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(hind_foot_without_claw,len(hind_foot_without_claw)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(hind_foot_without_claw)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_hind_foot_without_claw.attribute_value,tbl_hind_foot_without_claw.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_hind_foot_without_claw.attribute_value::numeric,tbl_hind_foot_without_claw.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_hind_foot_without_claw.attribute_value::numeric,tbl_hind_foot_without_claw.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_hind_foot_without_claw.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("hind_limb_length") and len(hind_limb_length) gt 0>
  <cfset mapurl = "#mapurl#&hind_limb_length=#hind_limb_length#">
  <cfif compare(hind_limb_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_hind_limb_length ON (#cacheTbleName#.collection_object_id = tbl_hind_limb_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_hind_limb_length.attribute_type = 'hind limb length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_hind_limb_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_hind_limb_length ON #cacheTbleName#.collection_object_id = tbl_hind_limb_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_hind_limb_length.attribute_type = 'hind limb length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif hind_limb_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(hind_limb_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(hind_limb_length,len(hind_limb_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(hind_limb_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_hind_limb_length.attribute_value,tbl_hind_limb_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_hind_limb_length.attribute_value::numeric,tbl_hind_limb_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_hind_limb_length.attribute_value::numeric,tbl_hind_limb_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_hind_limb_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("historical") and len(historical) gt 0>
  <cfset mapurl = "#mapurl#&historical=#historical#">
  <cfif compare(historical,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_historical ON (#cacheTbleName#.collection_object_id = tbl_historical.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_historical.attribute_type = 'historical'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_historical.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_historical ON #cacheTbleName#.collection_object_id = tbl_historical.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_historical.attribute_type = 'historical' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif historical eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(historical,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(historical,len(historical)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(historical)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_historical.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_historical.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("image_confirmed") and len(image_confirmed) gt 0>
  <cfset mapurl = "#mapurl#&image_confirmed=#image_confirmed#">
  <cfif compare(image_confirmed,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_image_confirmed ON (#cacheTbleName#.collection_object_id = tbl_image_confirmed.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_image_confirmed.attribute_type = 'image confirmed'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_image_confirmed.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_image_confirmed ON #cacheTbleName#.collection_object_id = tbl_image_confirmed.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_image_confirmed.attribute_type = 'image confirmed' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif image_confirmed eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(image_confirmed,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(image_confirmed,len(image_confirmed)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(image_confirmed)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_image_confirmed.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_image_confirmed.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("incubation_stage") and len(incubation_stage) gt 0>
  <cfset mapurl = "#mapurl#&incubation_stage=#incubation_stage#">
  <cfif compare(incubation_stage,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_incubation_stage ON (#cacheTbleName#.collection_object_id = tbl_incubation_stage.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_incubation_stage.attribute_type = 'incubation stage'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_incubation_stage.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_incubation_stage ON #cacheTbleName#.collection_object_id = tbl_incubation_stage.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_incubation_stage.attribute_type = 'incubation stage' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif incubation_stage eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(incubation_stage,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(incubation_stage,len(incubation_stage)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(incubation_stage)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_incubation_stage.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_incubation_stage.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("individual_count") and len(individual_count) gt 0>
  <cfset mapurl = "#mapurl#&individual_count=#individual_count#">
  <cfif compare(individual_count,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_individual_count ON (#cacheTbleName#.collection_object_id = tbl_individual_count.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_individual_count.attribute_type = 'individual count'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_individual_count.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_individual_count ON #cacheTbleName#.collection_object_id = tbl_individual_count.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_individual_count.attribute_type = 'individual count' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif individual_count eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(individual_count,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(individual_count,len(individual_count)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(individual_count)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase('XXXX',temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    <cfif len(schunits) gt 0>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_individual_count.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_individual_count.attribute_units">
      <cfset thisrow.o="="> 
      <cfset thisrow.v="#schunits#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_individual_count.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("inscriptions_and_marks") and len(inscriptions_and_marks) gt 0>
  <cfset mapurl = "#mapurl#&inscriptions_and_marks=#inscriptions_and_marks#">
  <cfif compare(inscriptions_and_marks,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_inscriptions_and_marks ON (#cacheTbleName#.collection_object_id = tbl_inscriptions_and_marks.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_inscriptions_and_marks.attribute_type = 'inscriptions and marks'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_inscriptions_and_marks.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_inscriptions_and_marks ON #cacheTbleName#.collection_object_id = tbl_inscriptions_and_marks.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_inscriptions_and_marks.attribute_type = 'inscriptions and marks' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif inscriptions_and_marks eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(inscriptions_and_marks,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(inscriptions_and_marks,len(inscriptions_and_marks)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(inscriptions_and_marks)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_inscriptions_and_marks.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_inscriptions_and_marks.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("isotope_value") and len(isotope_value) gt 0>
  <cfset mapurl = "#mapurl#&isotope_value=#isotope_value#">
  <cfif compare(isotope_value,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_isotope_value ON (#cacheTbleName#.collection_object_id = tbl_isotope_value.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_isotope_value.attribute_type = 'isotope value'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_isotope_value.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_isotope_value ON #cacheTbleName#.collection_object_id = tbl_isotope_value.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_isotope_value.attribute_type = 'isotope value' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif isotope_value eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(isotope_value,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(isotope_value,len(isotope_value)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(isotope_value)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_isotope_value.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_isotope_value.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("keywords") and len(keywords) gt 0>
  <cfset mapurl = "#mapurl#&keywords=#keywords#">
  <cfif compare(keywords,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_keywords ON (#cacheTbleName#.collection_object_id = tbl_keywords.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_keywords.attribute_type = 'keywords'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_keywords.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_keywords ON #cacheTbleName#.collection_object_id = tbl_keywords.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_keywords.attribute_type = 'keywords' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif keywords eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(keywords,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(keywords,len(keywords)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(keywords)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_keywords.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_keywords.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("left_gonad_length") and len(left_gonad_length) gt 0>
  <cfset mapurl = "#mapurl#&left_gonad_length=#left_gonad_length#">
  <cfif compare(left_gonad_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_left_gonad_length ON (#cacheTbleName#.collection_object_id = tbl_left_gonad_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_left_gonad_length.attribute_type = 'left gonad length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_left_gonad_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_left_gonad_length ON #cacheTbleName#.collection_object_id = tbl_left_gonad_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_left_gonad_length.attribute_type = 'left gonad length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif left_gonad_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(left_gonad_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(left_gonad_length,len(left_gonad_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(left_gonad_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_left_gonad_length.attribute_value,tbl_left_gonad_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_left_gonad_length.attribute_value::numeric,tbl_left_gonad_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_left_gonad_length.attribute_value::numeric,tbl_left_gonad_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_left_gonad_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("left_gonad_width") and len(left_gonad_width) gt 0>
  <cfset mapurl = "#mapurl#&left_gonad_width=#left_gonad_width#">
  <cfif compare(left_gonad_width,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_left_gonad_width ON (#cacheTbleName#.collection_object_id = tbl_left_gonad_width.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_left_gonad_width.attribute_type = 'left gonad width'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_left_gonad_width.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_left_gonad_width ON #cacheTbleName#.collection_object_id = tbl_left_gonad_width.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_left_gonad_width.attribute_type = 'left gonad width' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif left_gonad_width eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(left_gonad_width,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(left_gonad_width,len(left_gonad_width)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(left_gonad_width)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_left_gonad_width.attribute_value,tbl_left_gonad_width.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_left_gonad_width.attribute_value::numeric,tbl_left_gonad_width.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_left_gonad_width.attribute_value::numeric,tbl_left_gonad_width.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_left_gonad_width.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("life_stage") and len(life_stage) gt 0>
  <cfset mapurl = "#mapurl#&life_stage=#life_stage#">
  <cfif compare(life_stage,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_life_stage ON (#cacheTbleName#.collection_object_id = tbl_life_stage.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_life_stage.attribute_type = 'life stage'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_life_stage.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_life_stage ON #cacheTbleName#.collection_object_id = tbl_life_stage.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_life_stage.attribute_type = 'life stage' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif life_stage eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(life_stage,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(life_stage,len(life_stage)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(life_stage)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_life_stage.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_life_stage.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("location_in_host") and len(location_in_host) gt 0>
  <cfset mapurl = "#mapurl#&location_in_host=#location_in_host#">
  <cfif compare(location_in_host,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_location_in_host ON (#cacheTbleName#.collection_object_id = tbl_location_in_host.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_location_in_host.attribute_type = 'location in host'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_location_in_host.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_location_in_host ON #cacheTbleName#.collection_object_id = tbl_location_in_host.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_location_in_host.attribute_type = 'location in host' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif location_in_host eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(location_in_host,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(location_in_host,len(location_in_host)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(location_in_host)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_location_in_host.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_location_in_host.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("luster") and len(luster) gt 0>
  <cfset mapurl = "#mapurl#&luster=#luster#">
  <cfif compare(luster,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_luster ON (#cacheTbleName#.collection_object_id = tbl_luster.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_luster.attribute_type = 'luster'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_luster.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_luster ON #cacheTbleName#.collection_object_id = tbl_luster.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_luster.attribute_type = 'luster' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif luster eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(luster,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(luster,len(luster)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(luster)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_luster.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_luster.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("materials") and len(materials) gt 0>
  <cfset mapurl = "#mapurl#&materials=#materials#">
  <cfif compare(materials,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_materials ON (#cacheTbleName#.collection_object_id = tbl_materials.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_materials.attribute_type = 'materials'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_materials.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_materials ON #cacheTbleName#.collection_object_id = tbl_materials.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_materials.attribute_type = 'materials' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif materials eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(materials,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(materials,len(materials)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(materials)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_materials.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_materials.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("maximum_standard_length") and len(maximum_standard_length) gt 0>
  <cfset mapurl = "#mapurl#&maximum_standard_length=#maximum_standard_length#">
  <cfif compare(maximum_standard_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_maximum_standard_length ON (#cacheTbleName#.collection_object_id = tbl_maximum_standard_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_maximum_standard_length.attribute_type = 'maximum standard length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_maximum_standard_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_maximum_standard_length ON #cacheTbleName#.collection_object_id = tbl_maximum_standard_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_maximum_standard_length.attribute_type = 'maximum standard length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif maximum_standard_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(maximum_standard_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(maximum_standard_length,len(maximum_standard_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(maximum_standard_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_maximum_standard_length.attribute_value,tbl_maximum_standard_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_maximum_standard_length.attribute_value::numeric,tbl_maximum_standard_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_maximum_standard_length.attribute_value::numeric,tbl_maximum_standard_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_maximum_standard_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("maximum_total_length") and len(maximum_total_length) gt 0>
  <cfset mapurl = "#mapurl#&maximum_total_length=#maximum_total_length#">
  <cfif compare(maximum_total_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_maximum_total_length ON (#cacheTbleName#.collection_object_id = tbl_maximum_total_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_maximum_total_length.attribute_type = 'maximum total length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_maximum_total_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_maximum_total_length ON #cacheTbleName#.collection_object_id = tbl_maximum_total_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_maximum_total_length.attribute_type = 'maximum total length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif maximum_total_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(maximum_total_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(maximum_total_length,len(maximum_total_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(maximum_total_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_maximum_total_length.attribute_value,tbl_maximum_total_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_maximum_total_length.attribute_value::numeric,tbl_maximum_total_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_maximum_total_length.attribute_value::numeric,tbl_maximum_total_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_maximum_total_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("middle_toe_length") and len(middle_toe_length) gt 0>
  <cfset mapurl = "#mapurl#&middle_toe_length=#middle_toe_length#">
  <cfif compare(middle_toe_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_middle_toe_length ON (#cacheTbleName#.collection_object_id = tbl_middle_toe_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_middle_toe_length.attribute_type = 'middle toe length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_middle_toe_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_middle_toe_length ON #cacheTbleName#.collection_object_id = tbl_middle_toe_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_middle_toe_length.attribute_type = 'middle toe length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif middle_toe_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(middle_toe_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(middle_toe_length,len(middle_toe_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(middle_toe_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_middle_toe_length.attribute_value,tbl_middle_toe_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_middle_toe_length.attribute_value::numeric,tbl_middle_toe_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_middle_toe_length.attribute_value::numeric,tbl_middle_toe_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_middle_toe_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("minimum_standard_length") and len(minimum_standard_length) gt 0>
  <cfset mapurl = "#mapurl#&minimum_standard_length=#minimum_standard_length#">
  <cfif compare(minimum_standard_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_minimum_standard_length ON (#cacheTbleName#.collection_object_id = tbl_minimum_standard_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_minimum_standard_length.attribute_type = 'minimum standard length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_minimum_standard_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_minimum_standard_length ON #cacheTbleName#.collection_object_id = tbl_minimum_standard_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_minimum_standard_length.attribute_type = 'minimum standard length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif minimum_standard_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(minimum_standard_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(minimum_standard_length,len(minimum_standard_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(minimum_standard_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_minimum_standard_length.attribute_value,tbl_minimum_standard_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_minimum_standard_length.attribute_value::numeric,tbl_minimum_standard_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_minimum_standard_length.attribute_value::numeric,tbl_minimum_standard_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_minimum_standard_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("minimum_total_length") and len(minimum_total_length) gt 0>
  <cfset mapurl = "#mapurl#&minimum_total_length=#minimum_total_length#">
  <cfif compare(minimum_total_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_minimum_total_length ON (#cacheTbleName#.collection_object_id = tbl_minimum_total_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_minimum_total_length.attribute_type = 'minimum total length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_minimum_total_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_minimum_total_length ON #cacheTbleName#.collection_object_id = tbl_minimum_total_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_minimum_total_length.attribute_type = 'minimum total length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif minimum_total_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(minimum_total_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(minimum_total_length,len(minimum_total_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(minimum_total_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_minimum_total_length.attribute_value,tbl_minimum_total_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_minimum_total_length.attribute_value::numeric,tbl_minimum_total_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_minimum_total_length.attribute_value::numeric,tbl_minimum_total_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_minimum_total_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("molt_condition") and len(molt_condition) gt 0>
  <cfset mapurl = "#mapurl#&molt_condition=#molt_condition#">
  <cfif compare(molt_condition,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_molt_condition ON (#cacheTbleName#.collection_object_id = tbl_molt_condition.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_molt_condition.attribute_type = 'molt condition'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_molt_condition.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_molt_condition ON #cacheTbleName#.collection_object_id = tbl_molt_condition.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_molt_condition.attribute_type = 'molt condition' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif molt_condition eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(molt_condition,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(molt_condition,len(molt_condition)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(molt_condition)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_molt_condition.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_molt_condition.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("nagpra_category") and len(nagpra_category) gt 0>
  <cfset mapurl = "#mapurl#&nagpra_category=#nagpra_category#">
  <cfif compare(nagpra_category,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_nagpra_category ON (#cacheTbleName#.collection_object_id = tbl_nagpra_category.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_nagpra_category.attribute_type = 'NAGPRA category'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_nagpra_category.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_nagpra_category ON #cacheTbleName#.collection_object_id = tbl_nagpra_category.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_nagpra_category.attribute_type = 'NAGPRA category' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif nagpra_category eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(nagpra_category,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(nagpra_category,len(nagpra_category)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(nagpra_category)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_nagpra_category.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_nagpra_category.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("neck_width") and len(neck_width) gt 0>
  <cfset mapurl = "#mapurl#&neck_width=#neck_width#">
  <cfif compare(neck_width,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_neck_width ON (#cacheTbleName#.collection_object_id = tbl_neck_width.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_neck_width.attribute_type = 'neck width'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_neck_width.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_neck_width ON #cacheTbleName#.collection_object_id = tbl_neck_width.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_neck_width.attribute_type = 'neck width' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif neck_width eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(neck_width,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(neck_width,len(neck_width)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(neck_width)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_neck_width.attribute_value,tbl_neck_width.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_neck_width.attribute_value::numeric,tbl_neck_width.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_neck_width.attribute_value::numeric,tbl_neck_width.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_neck_width.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("nest_description") and len(nest_description) gt 0>
  <cfset mapurl = "#mapurl#&nest_description=#nest_description#">
  <cfif compare(nest_description,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_nest_description ON (#cacheTbleName#.collection_object_id = tbl_nest_description.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_nest_description.attribute_type = 'nest description'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_nest_description.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_nest_description ON #cacheTbleName#.collection_object_id = tbl_nest_description.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_nest_description.attribute_type = 'nest description' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif nest_description eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(nest_description,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(nest_description,len(nest_description)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(nest_description)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_nest_description.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_nest_description.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("nest_phenology") and len(nest_phenology) gt 0>
  <cfset mapurl = "#mapurl#&nest_phenology=#nest_phenology#">
  <cfif compare(nest_phenology,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_nest_phenology ON (#cacheTbleName#.collection_object_id = tbl_nest_phenology.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_nest_phenology.attribute_type = 'nest phenology'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_nest_phenology.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_nest_phenology ON #cacheTbleName#.collection_object_id = tbl_nest_phenology.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_nest_phenology.attribute_type = 'nest phenology' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif nest_phenology eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(nest_phenology,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(nest_phenology,len(nest_phenology)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(nest_phenology)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_nest_phenology.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_nest_phenology.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("number_of_labels") and len(number_of_labels) gt 0>
  <cfset mapurl = "#mapurl#&number_of_labels=#number_of_labels#">
  <cfif compare(number_of_labels,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_number_of_labels ON (#cacheTbleName#.collection_object_id = tbl_number_of_labels.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_number_of_labels.attribute_type = 'number of labels'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_number_of_labels.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_number_of_labels ON #cacheTbleName#.collection_object_id = tbl_number_of_labels.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_number_of_labels.attribute_type = 'number of labels' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif number_of_labels eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(number_of_labels,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(number_of_labels,len(number_of_labels)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(number_of_labels)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_number_of_labels.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_number_of_labels.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("numeric_age") and len(numeric_age) gt 0>
  <cfset mapurl = "#mapurl#&numeric_age=#numeric_age#">
  <cfif compare(numeric_age,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_numeric_age ON (#cacheTbleName#.collection_object_id = tbl_numeric_age.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_numeric_age.attribute_type = 'numeric age'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_numeric_age.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_numeric_age ON #cacheTbleName#.collection_object_id = tbl_numeric_age.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_numeric_age.attribute_type = 'numeric age' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif numeric_age eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(numeric_age,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(numeric_age,len(numeric_age)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(numeric_age)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrTimeUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    <cfif oper is "between">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="to_days(tbl_numeric_age.attribute_value,tbl_numeric_age.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="to_days($$#low#$$,$$#schunits#$$)">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="to_days(tbl_numeric_age.attribute_value,tbl_numeric_age.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="to_days($$#high#$$,$$#schunits#$$)">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="to_days(tbl_numeric_age.attribute_value,tbl_numeric_age.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="to_days($$#schTerm#$$,$$#schunits#$$)">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_numeric_age.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("object_title") and len(object_title) gt 0>
  <cfset mapurl = "#mapurl#&object_title=#object_title#">
  <cfif compare(object_title,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_object_title ON (#cacheTbleName#.collection_object_id = tbl_object_title.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_object_title.attribute_type = 'object title'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_object_title.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_object_title ON #cacheTbleName#.collection_object_id = tbl_object_title.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_object_title.attribute_type = 'object title' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif object_title eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(object_title,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(object_title,len(object_title)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(object_title)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_object_title.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_object_title.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("ovum") and len(ovum) gt 0>
  <cfset mapurl = "#mapurl#&ovum=#ovum#">
  <cfif compare(ovum,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_ovum ON (#cacheTbleName#.collection_object_id = tbl_ovum.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_ovum.attribute_type = 'ovum'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_ovum.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_ovum ON #cacheTbleName#.collection_object_id = tbl_ovum.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_ovum.attribute_type = 'ovum' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif ovum eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(ovum,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(ovum,len(ovum)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(ovum)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_ovum.attribute_value,tbl_ovum.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_ovum.attribute_value::numeric,tbl_ovum.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_ovum.attribute_value::numeric,tbl_ovum.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_ovum.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("parasites_found") and len(parasites_found) gt 0>
  <cfset mapurl = "#mapurl#&parasites_found=#parasites_found#">
  <cfif compare(parasites_found,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_parasites_found ON (#cacheTbleName#.collection_object_id = tbl_parasites_found.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_parasites_found.attribute_type = 'parasites found'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_parasites_found.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_parasites_found ON #cacheTbleName#.collection_object_id = tbl_parasites_found.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_parasites_found.attribute_type = 'parasites found' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif parasites_found eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(parasites_found,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(parasites_found,len(parasites_found)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(parasites_found)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_parasites_found.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_parasites_found.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("parts_examined") and len(parts_examined) gt 0>
  <cfset mapurl = "#mapurl#&parts_examined=#parts_examined#">
  <cfif compare(parts_examined,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_parts_examined ON (#cacheTbleName#.collection_object_id = tbl_parts_examined.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_parts_examined.attribute_type = 'parts examined'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_parts_examined.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_parts_examined ON #cacheTbleName#.collection_object_id = tbl_parts_examined.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_parts_examined.attribute_type = 'parts examined' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif parts_examined eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(parts_examined,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(parts_examined,len(parts_examined)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(parts_examined)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_parts_examined.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_parts_examined.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("pit_depth") and len(pit_depth) gt 0>
  <cfset mapurl = "#mapurl#&pit_depth=#pit_depth#">
  <cfif compare(pit_depth,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_pit_depth ON (#cacheTbleName#.collection_object_id = tbl_pit_depth.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_pit_depth.attribute_type = 'pit depth'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_pit_depth.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_pit_depth ON #cacheTbleName#.collection_object_id = tbl_pit_depth.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_pit_depth.attribute_type = 'pit depth' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif pit_depth eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(pit_depth,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(pit_depth,len(pit_depth)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(pit_depth)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_pit_depth.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_pit_depth.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("plastron_length") and len(plastron_length) gt 0>
  <cfset mapurl = "#mapurl#&plastron_length=#plastron_length#">
  <cfif compare(plastron_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_plastron_length ON (#cacheTbleName#.collection_object_id = tbl_plastron_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_plastron_length.attribute_type = 'plastron length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_plastron_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_plastron_length ON #cacheTbleName#.collection_object_id = tbl_plastron_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_plastron_length.attribute_type = 'plastron length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif plastron_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(plastron_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(plastron_length,len(plastron_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(plastron_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_plastron_length.attribute_value,tbl_plastron_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_plastron_length.attribute_value::numeric,tbl_plastron_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_plastron_length.attribute_value::numeric,tbl_plastron_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_plastron_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("portfolio_or_series") and len(portfolio_or_series) gt 0>
  <cfset mapurl = "#mapurl#&portfolio_or_series=#portfolio_or_series#">
  <cfif compare(portfolio_or_series,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_portfolio_or_series ON (#cacheTbleName#.collection_object_id = tbl_portfolio_or_series.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_portfolio_or_series.attribute_type = 'portfolio or series'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_portfolio_or_series.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_portfolio_or_series ON #cacheTbleName#.collection_object_id = tbl_portfolio_or_series.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_portfolio_or_series.attribute_type = 'portfolio or series' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif portfolio_or_series eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(portfolio_or_series,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(portfolio_or_series,len(portfolio_or_series)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(portfolio_or_series)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_portfolio_or_series.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_portfolio_or_series.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("processing_history") and len(processing_history) gt 0>
  <cfset mapurl = "#mapurl#&processing_history=#processing_history#">
  <cfif compare(processing_history,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_processing_history ON (#cacheTbleName#.collection_object_id = tbl_processing_history.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_processing_history.attribute_type = 'processing history'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_processing_history.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_processing_history ON #cacheTbleName#.collection_object_id = tbl_processing_history.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_processing_history.attribute_type = 'processing history' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif processing_history eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(processing_history,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(processing_history,len(processing_history)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(processing_history)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_processing_history.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_processing_history.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("provenience") and len(provenience) gt 0>
  <cfset mapurl = "#mapurl#&provenience=#provenience#">
  <cfif compare(provenience,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_provenience ON (#cacheTbleName#.collection_object_id = tbl_provenience.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_provenience.attribute_type = 'provenience'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_provenience.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_provenience ON #cacheTbleName#.collection_object_id = tbl_provenience.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_provenience.attribute_type = 'provenience' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif provenience eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(provenience,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(provenience,len(provenience)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(provenience)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_provenience.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_provenience.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("provenience_east") and len(provenience_east) gt 0>
  <cfset mapurl = "#mapurl#&provenience_east=#provenience_east#">
  <cfif compare(provenience_east,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_provenience_east ON (#cacheTbleName#.collection_object_id = tbl_provenience_east.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_provenience_east.attribute_type = 'provenience east'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_provenience_east.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_provenience_east ON #cacheTbleName#.collection_object_id = tbl_provenience_east.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_provenience_east.attribute_type = 'provenience east' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif provenience_east eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(provenience_east,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(provenience_east,len(provenience_east)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(provenience_east)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_provenience_east.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_provenience_east.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("provenience_north") and len(provenience_north) gt 0>
  <cfset mapurl = "#mapurl#&provenience_north=#provenience_north#">
  <cfif compare(provenience_north,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_provenience_north ON (#cacheTbleName#.collection_object_id = tbl_provenience_north.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_provenience_north.attribute_type = 'provenience north'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_provenience_north.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_provenience_north ON #cacheTbleName#.collection_object_id = tbl_provenience_north.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_provenience_north.attribute_type = 'provenience north' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif provenience_north eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(provenience_north,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(provenience_north,len(provenience_north)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(provenience_north)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_provenience_north.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_provenience_north.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("quadrant") and len(quadrant) gt 0>
  <cfset mapurl = "#mapurl#&quadrant=#quadrant#">
  <cfif compare(quadrant,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_quadrant ON (#cacheTbleName#.collection_object_id = tbl_quadrant.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_quadrant.attribute_type = 'quadrant'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_quadrant.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_quadrant ON #cacheTbleName#.collection_object_id = tbl_quadrant.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_quadrant.attribute_type = 'quadrant' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif quadrant eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(quadrant,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(quadrant,len(quadrant)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(quadrant)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_quadrant.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_quadrant.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("radiometric_date") and len(radiometric_date) gt 0>
  <cfset mapurl = "#mapurl#&radiometric_date=#radiometric_date#">
  <cfif compare(radiometric_date,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_radiometric_date ON (#cacheTbleName#.collection_object_id = tbl_radiometric_date.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_radiometric_date.attribute_type = 'radiometric date'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_radiometric_date.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_radiometric_date ON #cacheTbleName#.collection_object_id = tbl_radiometric_date.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_radiometric_date.attribute_type = 'radiometric date' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif radiometric_date eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(radiometric_date,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(radiometric_date,len(radiometric_date)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(radiometric_date)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrTimeUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    <cfif oper is "between">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="to_days(tbl_radiometric_date.attribute_value,tbl_radiometric_date.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="to_days($$#low#$$,$$#schunits#$$)">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="to_days(tbl_radiometric_date.attribute_value,tbl_radiometric_date.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="to_days($$#high#$$,$$#schunits#$$)">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="to_days(tbl_radiometric_date.attribute_value,tbl_radiometric_date.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="to_days($$#schTerm#$$,$$#schunits#$$)">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_radiometric_date.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("reproductive_data") and len(reproductive_data) gt 0>
  <cfset mapurl = "#mapurl#&reproductive_data=#reproductive_data#">
  <cfif compare(reproductive_data,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_reproductive_data ON (#cacheTbleName#.collection_object_id = tbl_reproductive_data.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_reproductive_data.attribute_type = 'reproductive data'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_reproductive_data.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_reproductive_data ON #cacheTbleName#.collection_object_id = tbl_reproductive_data.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_reproductive_data.attribute_type = 'reproductive data' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif reproductive_data eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(reproductive_data,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(reproductive_data,len(reproductive_data)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(reproductive_data)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_reproductive_data.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_reproductive_data.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("right_gonad_length") and len(right_gonad_length) gt 0>
  <cfset mapurl = "#mapurl#&right_gonad_length=#right_gonad_length#">
  <cfif compare(right_gonad_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_right_gonad_length ON (#cacheTbleName#.collection_object_id = tbl_right_gonad_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_right_gonad_length.attribute_type = 'right gonad length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_right_gonad_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_right_gonad_length ON #cacheTbleName#.collection_object_id = tbl_right_gonad_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_right_gonad_length.attribute_type = 'right gonad length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif right_gonad_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(right_gonad_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(right_gonad_length,len(right_gonad_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(right_gonad_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_right_gonad_length.attribute_value,tbl_right_gonad_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_right_gonad_length.attribute_value::numeric,tbl_right_gonad_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_right_gonad_length.attribute_value::numeric,tbl_right_gonad_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_right_gonad_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("right_gonad_width") and len(right_gonad_width) gt 0>
  <cfset mapurl = "#mapurl#&right_gonad_width=#right_gonad_width#">
  <cfif compare(right_gonad_width,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_right_gonad_width ON (#cacheTbleName#.collection_object_id = tbl_right_gonad_width.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_right_gonad_width.attribute_type = 'right gonad width'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_right_gonad_width.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_right_gonad_width ON #cacheTbleName#.collection_object_id = tbl_right_gonad_width.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_right_gonad_width.attribute_type = 'right gonad width' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif right_gonad_width eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(right_gonad_width,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(right_gonad_width,len(right_gonad_width)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(right_gonad_width)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_right_gonad_width.attribute_value,tbl_right_gonad_width.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_right_gonad_width.attribute_value::numeric,tbl_right_gonad_width.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_right_gonad_width.attribute_value::numeric,tbl_right_gonad_width.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_right_gonad_width.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("sex") and len(sex) gt 0>
  <cfset mapurl = "#mapurl#&sex=#sex#">
  <cfif compare(sex,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_sex ON (#cacheTbleName#.collection_object_id = tbl_sex.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_sex.attribute_type = 'sex'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_sex.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_sex ON #cacheTbleName#.collection_object_id = tbl_sex.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_sex.attribute_type = 'sex' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif sex eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(sex,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(sex,len(sex)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(sex)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_sex.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_sex.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("skull_ossification") and len(skull_ossification) gt 0>
  <cfset mapurl = "#mapurl#&skull_ossification=#skull_ossification#">
  <cfif compare(skull_ossification,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_skull_ossification ON (#cacheTbleName#.collection_object_id = tbl_skull_ossification.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_skull_ossification.attribute_type = 'skull ossification'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_skull_ossification.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_skull_ossification ON #cacheTbleName#.collection_object_id = tbl_skull_ossification.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_skull_ossification.attribute_type = 'skull ossification' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif skull_ossification eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(skull_ossification,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(skull_ossification,len(skull_ossification)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(skull_ossification)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_skull_ossification.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_skull_ossification.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("snout_vent_length") and len(snout_vent_length) gt 0>
  <cfset mapurl = "#mapurl#&snout_vent_length=#snout_vent_length#">
  <cfif compare(snout_vent_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_snout_vent_length ON (#cacheTbleName#.collection_object_id = tbl_snout_vent_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_snout_vent_length.attribute_type = 'snout-vent length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_snout_vent_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_snout_vent_length ON #cacheTbleName#.collection_object_id = tbl_snout_vent_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_snout_vent_length.attribute_type = 'snout-vent length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif snout_vent_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(snout_vent_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(snout_vent_length,len(snout_vent_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(snout_vent_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_snout_vent_length.attribute_value,tbl_snout_vent_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_snout_vent_length.attribute_value::numeric,tbl_snout_vent_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_snout_vent_length.attribute_value::numeric,tbl_snout_vent_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_snout_vent_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("snv_results") and len(snv_results) gt 0>
  <cfset mapurl = "#mapurl#&snv_results=#snv_results#">
  <cfif compare(snv_results,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_snv_results ON (#cacheTbleName#.collection_object_id = tbl_snv_results.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_snv_results.attribute_type = 'SNV results'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_snv_results.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_snv_results ON #cacheTbleName#.collection_object_id = tbl_snv_results.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_snv_results.attribute_type = 'SNV results' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif snv_results eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(snv_results,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(snv_results,len(snv_results)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(snv_results)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_snv_results.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_snv_results.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("soft_parts") and len(soft_parts) gt 0>
  <cfset mapurl = "#mapurl#&soft_parts=#soft_parts#">
  <cfif compare(soft_parts,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_soft_parts ON (#cacheTbleName#.collection_object_id = tbl_soft_parts.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_soft_parts.attribute_type = 'soft parts'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_soft_parts.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_soft_parts ON #cacheTbleName#.collection_object_id = tbl_soft_parts.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_soft_parts.attribute_type = 'soft parts' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif soft_parts eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(soft_parts,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(soft_parts,len(soft_parts)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(soft_parts)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_soft_parts.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_soft_parts.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("spleen_length") and len(spleen_length) gt 0>
  <cfset mapurl = "#mapurl#&spleen_length=#spleen_length#">
  <cfif compare(spleen_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_spleen_length ON (#cacheTbleName#.collection_object_id = tbl_spleen_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_spleen_length.attribute_type = 'spleen length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_spleen_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_spleen_length ON #cacheTbleName#.collection_object_id = tbl_spleen_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_spleen_length.attribute_type = 'spleen length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif spleen_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(spleen_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(spleen_length,len(spleen_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(spleen_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_spleen_length.attribute_value,tbl_spleen_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_spleen_length.attribute_value::numeric,tbl_spleen_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_spleen_length.attribute_value::numeric,tbl_spleen_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_spleen_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("square") and len(square) gt 0>
  <cfset mapurl = "#mapurl#&square=#square#">
  <cfif compare(square,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_square ON (#cacheTbleName#.collection_object_id = tbl_square.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_square.attribute_type = 'square'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_square.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_square ON #cacheTbleName#.collection_object_id = tbl_square.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_square.attribute_type = 'square' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif square eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(square,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(square,len(square)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(square)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_square.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_square.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("standard_length") and len(standard_length) gt 0>
  <cfset mapurl = "#mapurl#&standard_length=#standard_length#">
  <cfif compare(standard_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_standard_length ON (#cacheTbleName#.collection_object_id = tbl_standard_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_standard_length.attribute_type = 'standard length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_standard_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_standard_length ON #cacheTbleName#.collection_object_id = tbl_standard_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_standard_length.attribute_type = 'standard length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif standard_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(standard_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(standard_length,len(standard_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(standard_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_standard_length.attribute_value,tbl_standard_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_standard_length.attribute_value::numeric,tbl_standard_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_standard_length.attribute_value::numeric,tbl_standard_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_standard_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("stomach_contents") and len(stomach_contents) gt 0>
  <cfset mapurl = "#mapurl#&stomach_contents=#stomach_contents#">
  <cfif compare(stomach_contents,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_stomach_contents ON (#cacheTbleName#.collection_object_id = tbl_stomach_contents.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_stomach_contents.attribute_type = 'stomach contents'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_stomach_contents.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_stomach_contents ON #cacheTbleName#.collection_object_id = tbl_stomach_contents.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_stomach_contents.attribute_type = 'stomach contents' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif stomach_contents eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(stomach_contents,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(stomach_contents,len(stomach_contents)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(stomach_contents)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_stomach_contents.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_stomach_contents.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("straight_carapace_length") and len(straight_carapace_length) gt 0>
  <cfset mapurl = "#mapurl#&straight_carapace_length=#straight_carapace_length#">
  <cfif compare(straight_carapace_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_straight_carapace_length ON (#cacheTbleName#.collection_object_id = tbl_straight_carapace_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_straight_carapace_length.attribute_type = 'straight carapace length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_straight_carapace_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_straight_carapace_length ON #cacheTbleName#.collection_object_id = tbl_straight_carapace_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_straight_carapace_length.attribute_type = 'straight carapace length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif straight_carapace_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(straight_carapace_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(straight_carapace_length,len(straight_carapace_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(straight_carapace_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_straight_carapace_length.attribute_value,tbl_straight_carapace_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_straight_carapace_length.attribute_value::numeric,tbl_straight_carapace_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_straight_carapace_length.attribute_value::numeric,tbl_straight_carapace_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_straight_carapace_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("stratigraphic_position") and len(stratigraphic_position) gt 0>
  <cfset mapurl = "#mapurl#&stratigraphic_position=#stratigraphic_position#">
  <cfif compare(stratigraphic_position,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_stratigraphic_position ON (#cacheTbleName#.collection_object_id = tbl_stratigraphic_position.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_stratigraphic_position.attribute_type = 'stratigraphic position'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_stratigraphic_position.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_stratigraphic_position ON #cacheTbleName#.collection_object_id = tbl_stratigraphic_position.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_stratigraphic_position.attribute_type = 'stratigraphic position' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif stratigraphic_position eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(stratigraphic_position,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(stratigraphic_position,len(stratigraphic_position)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(stratigraphic_position)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_stratigraphic_position.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_stratigraphic_position.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("subject") and len(subject) gt 0>
  <cfset mapurl = "#mapurl#&subject=#subject#">
  <cfif compare(subject,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_subject ON (#cacheTbleName#.collection_object_id = tbl_subject.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_subject.attribute_type = 'subject'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_subject.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_subject ON #cacheTbleName#.collection_object_id = tbl_subject.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_subject.attribute_type = 'subject' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif subject eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(subject,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(subject,len(subject)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(subject)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_subject.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_subject.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("tail_base_width") and len(tail_base_width) gt 0>
  <cfset mapurl = "#mapurl#&tail_base_width=#tail_base_width#">
  <cfif compare(tail_base_width,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_tail_base_width ON (#cacheTbleName#.collection_object_id = tbl_tail_base_width.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_tail_base_width.attribute_type = 'tail base width'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_tail_base_width.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_tail_base_width ON #cacheTbleName#.collection_object_id = tbl_tail_base_width.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_tail_base_width.attribute_type = 'tail base width' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif tail_base_width eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(tail_base_width,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(tail_base_width,len(tail_base_width)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(tail_base_width)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tail_base_width.attribute_value,tbl_tail_base_width.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tail_base_width.attribute_value::numeric,tbl_tail_base_width.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tail_base_width.attribute_value::numeric,tbl_tail_base_width.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_tail_base_width.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("tail_condition") and len(tail_condition) gt 0>
  <cfset mapurl = "#mapurl#&tail_condition=#tail_condition#">
  <cfif compare(tail_condition,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_tail_condition ON (#cacheTbleName#.collection_object_id = tbl_tail_condition.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_tail_condition.attribute_type = 'tail condition'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_tail_condition.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_tail_condition ON #cacheTbleName#.collection_object_id = tbl_tail_condition.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_tail_condition.attribute_type = 'tail condition' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif tail_condition eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(tail_condition,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(tail_condition,len(tail_condition)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(tail_condition)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_tail_condition.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_tail_condition.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("tail_girth") and len(tail_girth) gt 0>
  <cfset mapurl = "#mapurl#&tail_girth=#tail_girth#">
  <cfif compare(tail_girth,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_tail_girth ON (#cacheTbleName#.collection_object_id = tbl_tail_girth.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_tail_girth.attribute_type = 'tail girth'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_tail_girth.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_tail_girth ON #cacheTbleName#.collection_object_id = tbl_tail_girth.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_tail_girth.attribute_type = 'tail girth' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif tail_girth eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(tail_girth,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(tail_girth,len(tail_girth)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(tail_girth)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tail_girth.attribute_value,tbl_tail_girth.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tail_girth.attribute_value::numeric,tbl_tail_girth.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tail_girth.attribute_value::numeric,tbl_tail_girth.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_tail_girth.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("tail_length") and len(tail_length) gt 0>
  <cfset mapurl = "#mapurl#&tail_length=#tail_length#">
  <cfif compare(tail_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_tail_length ON (#cacheTbleName#.collection_object_id = tbl_tail_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_tail_length.attribute_type = 'tail length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_tail_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_tail_length ON #cacheTbleName#.collection_object_id = tbl_tail_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_tail_length.attribute_type = 'tail length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif tail_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(tail_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(tail_length,len(tail_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(tail_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tail_length.attribute_value,tbl_tail_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tail_length.attribute_value::numeric,tbl_tail_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tail_length.attribute_value::numeric,tbl_tail_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_tail_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("tarsus_length") and len(tarsus_length) gt 0>
  <cfset mapurl = "#mapurl#&tarsus_length=#tarsus_length#">
  <cfif compare(tarsus_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_tarsus_length ON (#cacheTbleName#.collection_object_id = tbl_tarsus_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_tarsus_length.attribute_type = 'tarsus length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_tarsus_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_tarsus_length ON #cacheTbleName#.collection_object_id = tbl_tarsus_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_tarsus_length.attribute_type = 'tarsus length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif tarsus_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(tarsus_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(tarsus_length,len(tarsus_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(tarsus_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tarsus_length.attribute_value,tbl_tarsus_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tarsus_length.attribute_value::numeric,tbl_tarsus_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tarsus_length.attribute_value::numeric,tbl_tarsus_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_tarsus_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("tested_for_presence") and len(tested_for_presence) gt 0>
  <cfset mapurl = "#mapurl#&tested_for_presence=#tested_for_presence#">
  <cfif compare(tested_for_presence,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_tested_for_presence ON (#cacheTbleName#.collection_object_id = tbl_tested_for_presence.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_tested_for_presence.attribute_type = 'tested for presence'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_tested_for_presence.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_tested_for_presence ON #cacheTbleName#.collection_object_id = tbl_tested_for_presence.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_tested_for_presence.attribute_type = 'tested for presence' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif tested_for_presence eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(tested_for_presence,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(tested_for_presence,len(tested_for_presence)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(tested_for_presence)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_tested_for_presence.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_tested_for_presence.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("thumb_length_with_claw") and len(thumb_length_with_claw) gt 0>
  <cfset mapurl = "#mapurl#&thumb_length_with_claw=#thumb_length_with_claw#">
  <cfif compare(thumb_length_with_claw,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_thumb_length_with_claw ON (#cacheTbleName#.collection_object_id = tbl_thumb_length_with_claw.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_thumb_length_with_claw.attribute_type = 'thumb length with claw'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_thumb_length_with_claw.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_thumb_length_with_claw ON #cacheTbleName#.collection_object_id = tbl_thumb_length_with_claw.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_thumb_length_with_claw.attribute_type = 'thumb length with claw' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif thumb_length_with_claw eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(thumb_length_with_claw,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(thumb_length_with_claw,len(thumb_length_with_claw)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(thumb_length_with_claw)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_thumb_length_with_claw.attribute_value,tbl_thumb_length_with_claw.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_thumb_length_with_claw.attribute_value::numeric,tbl_thumb_length_with_claw.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_thumb_length_with_claw.attribute_value::numeric,tbl_thumb_length_with_claw.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_thumb_length_with_claw.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("tooth_length") and len(tooth_length) gt 0>
  <cfset mapurl = "#mapurl#&tooth_length=#tooth_length#">
  <cfif compare(tooth_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_tooth_length ON (#cacheTbleName#.collection_object_id = tbl_tooth_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_tooth_length.attribute_type = 'tooth length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_tooth_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_tooth_length ON #cacheTbleName#.collection_object_id = tbl_tooth_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_tooth_length.attribute_type = 'tooth length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif tooth_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(tooth_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(tooth_length,len(tooth_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(tooth_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tooth_length.attribute_value,tbl_tooth_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tooth_length.attribute_value::numeric,tbl_tooth_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tooth_length.attribute_value::numeric,tbl_tooth_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_tooth_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("tooth_width") and len(tooth_width) gt 0>
  <cfset mapurl = "#mapurl#&tooth_width=#tooth_width#">
  <cfif compare(tooth_width,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_tooth_width ON (#cacheTbleName#.collection_object_id = tbl_tooth_width.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_tooth_width.attribute_type = 'tooth width'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_tooth_width.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_tooth_width ON #cacheTbleName#.collection_object_id = tbl_tooth_width.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_tooth_width.attribute_type = 'tooth width' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif tooth_width eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(tooth_width,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(tooth_width,len(tooth_width)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(tooth_width)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tooth_width.attribute_value,tbl_tooth_width.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tooth_width.attribute_value::numeric,tbl_tooth_width.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tooth_width.attribute_value::numeric,tbl_tooth_width.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_tooth_width.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("total_length") and len(total_length) gt 0>
  <cfset mapurl = "#mapurl#&total_length=#total_length#">
  <cfif compare(total_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_total_length ON (#cacheTbleName#.collection_object_id = tbl_total_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_total_length.attribute_type = 'total length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_total_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_total_length ON #cacheTbleName#.collection_object_id = tbl_total_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_total_length.attribute_type = 'total length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif total_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(total_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(total_length,len(total_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(total_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_total_length.attribute_value,tbl_total_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_total_length.attribute_value::numeric,tbl_total_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_total_length.attribute_value::numeric,tbl_total_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_total_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("tragus_length") and len(tragus_length) gt 0>
  <cfset mapurl = "#mapurl#&tragus_length=#tragus_length#">
  <cfif compare(tragus_length,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_tragus_length ON (#cacheTbleName#.collection_object_id = tbl_tragus_length.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_tragus_length.attribute_type = 'tragus length'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_tragus_length.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_tragus_length ON #cacheTbleName#.collection_object_id = tbl_tragus_length.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_tragus_length.attribute_type = 'tragus length' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif tragus_length eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(tragus_length,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(tragus_length,len(tragus_length)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(tragus_length)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tragus_length.attribute_value,tbl_tragus_length.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tragus_length.attribute_value::numeric,tbl_tragus_length.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_tragus_length.attribute_value::numeric,tbl_tragus_length.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_tragus_length.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("trap_type") and len(trap_type) gt 0>
  <cfset mapurl = "#mapurl#&trap_type=#trap_type#">
  <cfif compare(trap_type,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_trap_type ON (#cacheTbleName#.collection_object_id = tbl_trap_type.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_trap_type.attribute_type = 'trap type'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_trap_type.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_trap_type ON #cacheTbleName#.collection_object_id = tbl_trap_type.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_trap_type.attribute_type = 'trap type' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif trap_type eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(trap_type,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(trap_type,len(trap_type)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(trap_type)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_trap_type.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_trap_type.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("unformatted_measurements") and len(unformatted_measurements) gt 0>
  <cfset mapurl = "#mapurl#&unformatted_measurements=#unformatted_measurements#">
  <cfif compare(unformatted_measurements,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_unformatted_measurements ON (#cacheTbleName#.collection_object_id = tbl_unformatted_measurements.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_unformatted_measurements.attribute_type = 'unformatted measurements'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_unformatted_measurements.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_unformatted_measurements ON #cacheTbleName#.collection_object_id = tbl_unformatted_measurements.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_unformatted_measurements.attribute_type = 'unformatted measurements' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif unformatted_measurements eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(unformatted_measurements,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(unformatted_measurements,len(unformatted_measurements)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(unformatted_measurements)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_unformatted_measurements.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_unformatted_measurements.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("value") and len(value) gt 0>
  <cfset mapurl = "#mapurl#&value=#value#">
  <cfif compare(value,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_value ON (#cacheTbleName#.collection_object_id = tbl_value.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_value.attribute_type = 'value'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_value.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_value ON #cacheTbleName#.collection_object_id = tbl_value.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_value.attribute_type = 'value' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif value eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(value,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(value,len(value)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(value)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase('XXXX',temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    <cfif len(schunits) gt 0>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_value.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_value.attribute_units">
      <cfset thisrow.o="="> 
      <cfset thisrow.v="#schunits#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_value.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("verbatim_agent") and len(verbatim_agent) gt 0>
  <cfset mapurl = "#mapurl#&verbatim_agent=#verbatim_agent#">
  <cfif compare(verbatim_agent,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_verbatim_agent ON (#cacheTbleName#.collection_object_id = tbl_verbatim_agent.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_verbatim_agent.attribute_type = 'verbatim agent'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_verbatim_agent.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_verbatim_agent ON #cacheTbleName#.collection_object_id = tbl_verbatim_agent.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_verbatim_agent.attribute_type = 'verbatim agent' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif verbatim_agent eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(verbatim_agent,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(verbatim_agent,len(verbatim_agent)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(verbatim_agent)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_verbatim_agent.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_verbatim_agent.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("verbatim_host_age") and len(verbatim_host_age) gt 0>
  <cfset mapurl = "#mapurl#&verbatim_host_age=#verbatim_host_age#">
  <cfif compare(verbatim_host_age,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_verbatim_host_age ON (#cacheTbleName#.collection_object_id = tbl_verbatim_host_age.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_verbatim_host_age.attribute_type = 'verbatim host age'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_verbatim_host_age.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_verbatim_host_age ON #cacheTbleName#.collection_object_id = tbl_verbatim_host_age.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_verbatim_host_age.attribute_type = 'verbatim host age' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif verbatim_host_age eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(verbatim_host_age,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(verbatim_host_age,len(verbatim_host_age)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(verbatim_host_age)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_verbatim_host_age.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_verbatim_host_age.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("verbatim_host_id") and len(verbatim_host_id) gt 0>
  <cfset mapurl = "#mapurl#&verbatim_host_id=#verbatim_host_id#">
  <cfif compare(verbatim_host_id,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_verbatim_host_id ON (#cacheTbleName#.collection_object_id = tbl_verbatim_host_id.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_verbatim_host_id.attribute_type = 'verbatim host ID'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_verbatim_host_id.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_verbatim_host_id ON #cacheTbleName#.collection_object_id = tbl_verbatim_host_id.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_verbatim_host_id.attribute_type = 'verbatim host ID' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif verbatim_host_id eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(verbatim_host_id,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(verbatim_host_id,len(verbatim_host_id)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(verbatim_host_id)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_verbatim_host_id.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_verbatim_host_id.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("verbatim_host_sex") and len(verbatim_host_sex) gt 0>
  <cfset mapurl = "#mapurl#&verbatim_host_sex=#verbatim_host_sex#">
  <cfif compare(verbatim_host_sex,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_verbatim_host_sex ON (#cacheTbleName#.collection_object_id = tbl_verbatim_host_sex.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_verbatim_host_sex.attribute_type = 'verbatim host sex'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_verbatim_host_sex.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_verbatim_host_sex ON #cacheTbleName#.collection_object_id = tbl_verbatim_host_sex.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_verbatim_host_sex.attribute_type = 'verbatim host sex' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif verbatim_host_sex eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(verbatim_host_sex,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(verbatim_host_sex,len(verbatim_host_sex)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(verbatim_host_sex)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_verbatim_host_sex.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_verbatim_host_sex.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("verbatim_preservation_date") and len(verbatim_preservation_date) gt 0>
  <cfset mapurl = "#mapurl#&verbatim_preservation_date=#verbatim_preservation_date#">
  <cfif compare(verbatim_preservation_date,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_verbatim_preservation_date ON (#cacheTbleName#.collection_object_id = tbl_verbatim_preservation_date.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_verbatim_preservation_date.attribute_type = 'verbatim preservation date'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_verbatim_preservation_date.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_verbatim_preservation_date ON #cacheTbleName#.collection_object_id = tbl_verbatim_preservation_date.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_verbatim_preservation_date.attribute_type = 'verbatim preservation date' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif verbatim_preservation_date eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(verbatim_preservation_date,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(verbatim_preservation_date,len(verbatim_preservation_date)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(verbatim_preservation_date)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_verbatim_preservation_date.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_verbatim_preservation_date.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("water_temperature") and len(water_temperature) gt 0>
  <cfset mapurl = "#mapurl#&water_temperature=#water_temperature#">
  <cfif compare(water_temperature,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_water_temperature ON (#cacheTbleName#.collection_object_id = tbl_water_temperature.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_water_temperature.attribute_type = 'water temperature'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_water_temperature.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_water_temperature ON #cacheTbleName#.collection_object_id = tbl_water_temperature.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_water_temperature.attribute_type = 'water temperature' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif water_temperature eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(water_temperature,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(water_temperature,len(water_temperature)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(water_temperature)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase('XXXX',temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    <cfif len(schunits) gt 0>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_water_temperature.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_water_temperature.attribute_units">
      <cfset thisrow.o="="> 
      <cfset thisrow.v="#schunits#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_water_temperature.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("weight") and len(weight) gt 0>
  <cfset mapurl = "#mapurl#&weight=#weight#">
  <cfif compare(weight,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_weight ON (#cacheTbleName#.collection_object_id = tbl_weight.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_weight.attribute_type = 'weight'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_weight.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_weight ON #cacheTbleName#.collection_object_id = tbl_weight.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_weight.attribute_type = 'weight' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif weight eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(weight,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(weight,len(weight)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(weight)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrWeightUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrWeightUnits=============
    <cfif oper is "between">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="to_grams(tbl_weight.attribute_value,tbl_weight.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="to_grams('#low#','#schunits#')">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="to_grams(tbl_weight.attribute_value,tbl_weight.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="to_grams('#high#','#schunits#')">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="to_grams(tbl_weight.attribute_value,tbl_weight.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="to_grams('#schTerm#','#schunits#')">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_weight.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("width") and len(width) gt 0>
  <cfset mapurl = "#mapurl#&width=#width#">
  <cfif compare(width,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_width ON (#cacheTbleName#.collection_object_id = tbl_width.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_width.attribute_type = 'width'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_width.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_width ON #cacheTbleName#.collection_object_id = tbl_width.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_width.attribute_type = 'width' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif width eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(width,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(width,len(width)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(width)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_width.attribute_value,tbl_width.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_width.attribute_value::numeric,tbl_width.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_width.attribute_value::numeric,tbl_width.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_width.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("wing_chord") and len(wing_chord) gt 0>
  <cfset mapurl = "#mapurl#&wing_chord=#wing_chord#">
  <cfif compare(wing_chord,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_wing_chord ON (#cacheTbleName#.collection_object_id = tbl_wing_chord.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_wing_chord.attribute_type = 'wing chord'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_wing_chord.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_wing_chord ON #cacheTbleName#.collection_object_id = tbl_wing_chord.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_wing_chord.attribute_type = 'wing chord' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif wing_chord eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(wing_chord,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(wing_chord,len(wing_chord)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(wing_chord)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_wing_chord.attribute_value,tbl_wing_chord.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_wing_chord.attribute_value::numeric,tbl_wing_chord.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_wing_chord.attribute_value::numeric,tbl_wing_chord.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_wing_chord.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("wing_span") and len(wing_span) gt 0>
  <cfset mapurl = "#mapurl#&wing_span=#wing_span#">
  <cfif compare(wing_span,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_wing_span ON (#cacheTbleName#.collection_object_id = tbl_wing_span.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_wing_span.attribute_type = 'wing span'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_wing_span.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_wing_span ON #cacheTbleName#.collection_object_id = tbl_wing_span.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_wing_span.attribute_type = 'wing span' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif wing_span eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
      <cfelse>
        <!--- we got more than NULL or _, perform some sort of search --->
        <cfset schunits="">
        <cfset oper=left(wing_span,1)>
        <cfif listfind(numattrschops,oper)>
          <cfset schTerm=ucase(right(wing_span,len(wing_span)-1))>
        <cfelse>
          <cfset oper="like">
          <cfset schTerm=ucase(wing_span)>
        </cfif>
        <cfif oper is "!"><cfset oper="!="></cfif>
        <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
        <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
          <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
        <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
          <cfset schunits=trim(replace(temp,"-",""))>
          <cfset low=trim(listgetat(numeric_age,1,"-"))>
          <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
          <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
          <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
        </cfif>
    ==========attrLengthUnits=============
    <cfif oper is "between">
      <!--- if we got here we have units and two search params ---> if we got here we have units and two search params
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_wing_span.attribute_value,tbl_wing_span.attribute_units)">
      <cfset thisrow.o=">="> 
      <cfset thisrow.v="#getMeters(low,schunits)#">
      <cfset arrayappend(qp,thisrow)>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_wing_span.attribute_value::numeric,tbl_wing_span.attribute_units)">
      <cfset thisrow.o="<="> 
      <cfset thisrow.v="#getMeters(high,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelseif len(schunits) gt 0>
        <!---- got units and single param --->got units and single param 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_numeric">
      <cfset thisrow.t="to_meters(tbl_wing_span.attribute_value::numeric,tbl_wing_span.attribute_units)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#getMeters(schTerm,schunits)#">
      <cfset arrayappend(qp,thisrow)>
    <cfelse>
     <!--- no units, text-operations ---> no units, text-operations 
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="tbl_wing_span.attribute_value">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#schTerm#">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
  </cfif>
</cfif>
</cfif>

<cfif isdefined("year_class") and len(year_class) gt 0>
  <cfset mapurl = "#mapurl#&year_class=#year_class#">
  <cfif compare(year_class,"NULL") is 0>
    <!--- NULL, attribute does not exist --->
    <cfset tbls = " #tbls# left outer JOIN v_attributes tbl_year_class ON (#cacheTbleName#.collection_object_id = tbl_year_class.collection_object_id) ">
    <cfset tbls = " #tbls#     AND tbl_year_class.attribute_type = 'year class'">
    <cfset thisrow={}>
    <cfset thisrow.l="false">
    <cfset thisrow.d="isnull">
    <cfset thisrow.t="tbl_year_class.attribute_type">
    <cfset thisrow.o="">
    <cfset thisrow.v="">
    <cfset arrayappend(qp,thisrow)>
  <cfelse>
    <!--- got something other than NULL, make the join --->
    <cfset tbls = " #tbls# INNER JOIN v_attributes tbl_year_class ON #cacheTbleName#.collection_object_id = tbl_year_class.collection_object_id ">
    <cfset tbls = " #tbls#     AND tbl_year_class.attribute_type = 'year class' ">
    <cfif session.flatTableName is not "flat">
      <!--- avoid anything that could leads to doscovery of encumbrances --->
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="isnull">
      <cfset thisrow.t="#cacheTbleName#.encumbrances">
      <cfset thisrow.o="">
      <cfset thisrow.v="">
      <cfset arrayappend(qp,thisrow)>
    </cfif>
    <cfif year_class eq "_">
      <!---- if value is _ then all we need is the join, otherwise keep processing ---->
    <cfset oper=left(year_class,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(year_class,len(year_class)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(year_class)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_year_class.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  <cfelse>
      <cfset thisrow={}>
      <cfset thisrow.l="false">
      <cfset thisrow.d="cf_sql_varchar">
      <cfset thisrow.t="upper(tbl_year_class.attribute_value)">
      <cfset thisrow.o="#oper#"> 
      <cfset thisrow.v="#ucase(schTerm)#">
      <cfset arrayappend(qp,thisrow)>
  </cfif>
  </cfif>
</cfif>
</cfif>